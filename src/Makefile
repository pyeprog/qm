# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mesquite
pkgincludedir = $(includedir)/mesquite
pkglibdir = $(libdir)/mesquite
pkglibexecdir = $(libexecdir)/mesquite
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/cxx.m4 \
	$(top_srcdir)/m4/cxxflags.m4 $(top_srcdir)/m4/itaps.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am \
	$(am__libmesquite_la_include_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/junk_config.h \
	$(top_builddir)/src/include/mesquite_config.h \
	$(top_builddir)/src/include/mesquite_version.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libmesquite_la_includedir)" \
	"$(DESTDIR)$(libmesquite_la_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__libmesquite_la_SOURCES_DIST = $(SRC_MESH_DIR)/ArrayMesh.cpp \
	$(SRC_MESH_DIR)/ElementPatches.cpp \
	$(SRC_MESH_DIR)/ExtraData.cpp $(SRC_MESH_DIR)/GlobalPatch.cpp \
	$(SRC_MESH_DIR)/IdealElements.cpp \
	$(SRC_MESH_DIR)/MeshDecorator.cpp $(SRC_MESH_DIR)/MeshImpl.cpp \
	$(SRC_MESH_DIR)/MeshImplData.cpp \
	$(SRC_MESH_DIR)/MeshImplTags.cpp $(SRC_MESH_DIR)/MeshUtil.cpp \
	$(SRC_MESH_DIR)/MeshWriter.cpp \
	$(SRC_MESH_DIR)/MsqMeshEntity.cpp \
	$(SRC_MESH_DIR)/MsqVertex.cpp \
	$(SRC_MESH_DIR)/ParallelMeshImpl.cpp \
	$(SRC_MESH_DIR)/PatchData.cpp \
	$(SRC_MESH_DIR)/PatchIterator.cpp $(SRC_MESH_DIR)/PatchSet.cpp \
	$(SRC_MESH_DIR)/TagVertexMesh.cpp \
	$(SRC_MESH_DIR)/TopologyInfo.cpp \
	$(SRC_MESH_DIR)/VertexPatches.cpp \
	$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp \
	$(SRC_MESH_DIR)/ParallelHelper.cpp \
	$(SRC_CONTROL_DIR)/Instruction.cpp \
	$(SRC_CONTROL_DIR)/InstructionQueue.cpp \
	$(SRC_CONTROL_DIR)/IQInterface.cpp \
	$(SRC_CONTROL_DIR)/TerminationCriterion.cpp \
	$(SRC_CONTROL_DIR)/Settings.cpp \
	$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp \
	$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp \
	$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/Wrapper.cpp \
	$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp \
	$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp \
	$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp \
	$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp \
	$(SRC_MISC_DIR)/ConicDomain.cpp \
	$(SRC_MISC_DIR)/CylinderDomain.cpp \
	$(SRC_MISC_DIR)/DomainClassifier.cpp \
	$(SRC_MISC_DIR)/DomainUtil.cpp $(SRC_MISC_DIR)/DomainUtil.hpp \
	$(SRC_MISC_DIR)/EdgeIterator.cpp $(SRC_MISC_DIR)/Exponent.cpp \
	$(SRC_MISC_DIR)/FileTokenizer.cpp \
	$(SRC_MISC_DIR)/MeshDomain1D.cpp \
	$(SRC_MISC_DIR)/MeshTransform.cpp \
	$(SRC_MISC_DIR)/MesquiteVersion.cpp \
	$(SRC_MISC_DIR)/MsqDebug.cpp $(SRC_MISC_DIR)/MsqError.cpp \
	$(SRC_MISC_DIR)/MsqFPE.cpp $(SRC_MISC_DIR)/MsqGeomPrim.cpp \
	$(SRC_MISC_DIR)/MsqHessian.cpp \
	$(SRC_MISC_DIR)/MsqInterrupt.cpp $(SRC_MISC_DIR)/MsqTimer.cpp \
	$(SRC_MISC_DIR)/PlanarDomain.cpp \
	$(SRC_MISC_DIR)/SimpleStats.cpp \
	$(SRC_MISC_DIR)/SphericalDomain.cpp \
	$(SRC_MISC_DIR)/Vector3D.cpp $(SRC_MISC_DIR)/VtkTypeInfo.cpp \
	$(SRC_MISC_DIR)/XYPlanarDomain.cpp \
	$(SRC_MISC_DIR)/XYRectangle.cpp $(SRC_MISC_DIR)/MsqIBase.cpp \
	$(SRC_MISC_DIR)/MsqIBase.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp \
	$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp \
	$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp \
	$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp \
	$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp \
	$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp \
	$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp \
	$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp \
	$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp \
	$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp \
	$(SRC_OPTSOLVER_DIR)/NonGradient.cpp \
	$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp \
	$(SRC_TARGETMETRIC_DIR)/TMetric.cpp \
	$(SRC_TARGETMETRIC_DIR)/TMPCommon.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMPDerivs.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp
am__objects_1 = ParallelHelperNoMPIStub.lo
#am__objects_1 = ParallelHelper.lo
#am__objects_2 = MsqIBase.lo
am__objects_3 = ArrayMesh.lo ElementPatches.lo ExtraData.lo \
	GlobalPatch.lo IdealElements.lo MeshDecorator.lo MeshImpl.lo \
	MeshImplData.lo MeshImplTags.lo MeshUtil.lo MeshWriter.lo \
	MsqMeshEntity.lo MsqVertex.lo ParallelMeshImpl.lo PatchData.lo \
	PatchIterator.lo PatchSet.lo TagVertexMesh.lo TopologyInfo.lo \
	VertexPatches.lo $(am__objects_1) Instruction.lo \
	InstructionQueue.lo IQInterface.lo TerminationCriterion.lo \
	Settings.lo SlaveBoundaryVertices.lo DeformingDomainWrapper.lo \
	LaplaceWrapper.lo ShapeImprovementWrapper.lo ShapeImprover.lo \
	SizeAdaptShapeWrapper.lo PaverMinEdgeLengthWrapper.lo \
	UntangleWrapper.lo ViscousCFDTetShapeWrapper.lo Wrapper.lo \
	MappingFunction.lo NodeSet.lo Sample.lo HexLagrangeShape.lo \
	QuadLagrangeShape.lo TetLagrangeShape.lo TriLagrangeShape.lo \
	LinearHexahedron.lo LinearPrism.lo LinearPyramid.lo \
	LinearQuadrilateral.lo LinearTetrahedron.lo LinearTriangle.lo \
	BoundedCylinderDomain.lo ConicDomain.lo CylinderDomain.lo \
	DomainClassifier.lo DomainUtil.lo EdgeIterator.lo Exponent.lo \
	FileTokenizer.lo MeshDomain1D.lo MeshTransform.lo \
	MesquiteVersion.lo MsqDebug.lo MsqError.lo MsqFPE.lo \
	MsqGeomPrim.lo MsqHessian.lo MsqInterrupt.lo MsqTimer.lo \
	PlanarDomain.lo SimpleStats.lo SphericalDomain.lo Vector3D.lo \
	VtkTypeInfo.lo XYPlanarDomain.lo XYRectangle.lo \
	$(am__objects_2) CompositeOFAdd.lo CompositeOFMultiply.lo \
	CompositeOFScalarAdd.lo CompositeOFScalarMultiply.lo \
	LInfTemplate.lo LPtoPTemplate.lo MaxTemplate.lo OFEvaluator.lo \
	ObjectiveFunction.lo ObjectiveFunctionTemplate.lo \
	PatchPowerMeanP.lo PMeanPTemplate.lo StdDevTemplate.lo \
	VarianceTemplate.lo QualityAssessor.lo PatchSetUser.lo \
	QualityImprover.lo VertexMover.lo ConjugateGradient.lo \
	FeasibleNewton.lo NonSmoothDescent.lo QuasiNewton.lo \
	SteepestDescent.lo NonGradient.lo TrustRegion.lo Randomize.lo \
	RelaxationSmoother.lo LaplacianSmoother.lo \
	SmartLaplacianSmoother.lo CompareQM.lo NumericalQM.lo \
	AddQualityMetric.lo AveragingQM.lo EdgeQM.lo ElemSampleQM.lo \
	ElementMaxQM.lo ElementAvgQM.lo ElementPMeanP.lo ElementQM.lo \
	MultiplyQualityMetric.lo PMeanPMetric.lo PowerQualityMetric.lo \
	QualityMetric.lo ScalarAddQualityMetric.lo \
	ScalarMultiplyQualityMetric.lo VertexMaxQM.lo VertexPMeanP.lo \
	VertexQM.lo AspectRatioGammaQualityMetric.lo \
	ConditionNumberQualityMetric.lo IdealWeightInverseMeanRatio.lo \
	IdealWeightMeanRatio.lo VertexConditionNumberQualityMetric.lo \
	EdgeLengthQualityMetric.lo EdgeLengthRangeQualityMetric.lo \
	AffineMapMetric.lo TargetMetricUtil.lo AWQualityMetric.lo \
	TQualityMetric.lo TMPQualityMetric.lo \
	UntangleBetaQualityMetric.lo EdgeLengthMetric.lo \
	LocalSizeQualityMetric.lo SizeMetric.lo \
	CachingTargetCalculator.lo IdealShapeTarget.lo \
	InverseMetricWeight.lo JacobianCalculator.lo LambdaTarget.lo \
	LambdaConstant.lo LVQDTargetCalculator.lo MetricWeight.lo \
	RefMeshTargetCalculator.lo ReferenceMesh.lo \
	RefSizeTargetCalculator.lo RemainingWeight.lo \
	TargetCalculator.lo TargetReader.lo TargetWriter.lo \
	TetDihedralWeight.lo WeightCalculator.lo WeightReader.lo \
	AWMetric.lo TMetric.lo TMetricBarrier.lo TMetricNonBarrier.lo \
	AWMetricBarrier.lo AWMetricNonBarrier.lo InvTransBarrier.lo \
	TOffset.lo TMixed.lo TPower2.lo TScale.lo TSquared.lo TSum.lo \
	AWShape2DB1.lo AWShape2DNB1.lo AWShape2DNB2.lo \
	TInverseMeanRatio.lo TShape2DNB2.lo TShape3DB2.lo TShapeB1.lo \
	TShapeNB1.lo AWShapeOrientNB1.lo TShapeOrientB1.lo \
	TShapeOrientB2.lo TShapeOrientNB1.lo TShapeOrientNB2.lo \
	AWShapeSizeB1.lo TShapeSize2DB2.lo TShapeSize2DNB1.lo \
	TShapeSize2DNB2.lo TShapeSize3DB2.lo TShapeSize3DB4.lo \
	TShapeSize3DNB1.lo TShapeSizeB1.lo TShapeSizeB3.lo \
	TShapeSizeNB3.lo AWShapeSizeOrientNB1.lo TShapeSizeOrientB1.lo \
	TShapeSizeOrientB2.lo TShapeSizeOrientNB1.lo AWSizeB1.lo \
	AWSizeNB1.lo TSizeB1.lo TSizeNB1.lo TTau.lo AWUntangleBeta.lo \
	TUntangle1.lo TUntangleBeta.lo TUntangleMu.lo
am_libmesquite_la_OBJECTS = $(am__objects_3)
libmesquite_la_OBJECTS = $(am_libmesquite_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmesquite_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libmesquite_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/include
depcomp = $(SHELL) $(top_srcdir)/./config_aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmesquite_la_SOURCES)
DIST_SOURCES = $(am__libmesquite_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__libmesquite_la_include_HEADERS_DIST = include/Mesquite.hpp \
	include/MeshInterface.hpp include/ParallelMeshInterface.hpp \
	include/ParallelHelperInterface.hpp include/CurveDomain.hpp \
	$(SRC_MESH_DIR)/ArrayMesh.hpp \
	$(SRC_MESH_DIR)/ElementPatches.hpp \
	$(SRC_MESH_DIR)/ExtraData.hpp \
	$(SRC_MESH_DIR)/ExtraDataUser.hpp \
	$(SRC_MESH_DIR)/GlobalPatch.hpp \
	$(SRC_MESH_DIR)/IdealElements.hpp \
	$(SRC_MESH_DIR)/MeshDecorator.hpp $(SRC_MESH_DIR)/MeshImpl.hpp \
	$(SRC_MESH_DIR)/MeshImplData.hpp \
	$(SRC_MESH_DIR)/MeshImplTags.hpp $(SRC_MESH_DIR)/MeshUtil.hpp \
	$(SRC_MESH_DIR)/MeshWriter.hpp \
	$(SRC_MESH_DIR)/MsqFreeVertexIndexIterator.hpp \
	$(SRC_MESH_DIR)/MsqMeshEntity.hpp \
	$(SRC_MESH_DIR)/MsqVertex.hpp \
	$(SRC_MESH_DIR)/ParallelMeshImpl.hpp \
	$(SRC_MESH_DIR)/PatchData.hpp \
	$(SRC_MESH_DIR)/PatchIterator.hpp $(SRC_MESH_DIR)/PatchSet.hpp \
	$(SRC_MESH_DIR)/TagVertexMesh.hpp \
	$(SRC_MESH_DIR)/TopologyInfo.hpp \
	$(SRC_MESH_DIR)/VertexPatches.hpp \
	$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.hpp \
	$(SRC_MESH_DIR)/ParallelHelper.hpp \
	$(SRC_CONTROL_DIR)/Instruction.hpp \
	$(SRC_CONTROL_DIR)/InstructionQueue.hpp \
	$(SRC_CONTROL_DIR)/IQInterface.hpp \
	$(SRC_CONTROL_DIR)/TerminationCriterion.hpp \
	$(SRC_CONTROL_DIR)/Settings.hpp \
	$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.hpp \
	$(SRC_CONTROL_DIR)/VertexSlaver.hpp \
	$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/LaplaceWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprover.hpp \
	$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/UntangleWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/Wrapper.hpp \
	$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.hpp \
	$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.hpp \
	$(SRC_MAPPINGFUNCTION_DIR)/Sample.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.hpp \
	$(SRC_MISC_DIR)/BoundedCylinderDomain.hpp \
	$(SRC_MISC_DIR)/Bits.hpp $(SRC_MISC_DIR)/ConicDomain.hpp \
	$(SRC_MISC_DIR)/CylinderDomain.hpp \
	$(SRC_MISC_DIR)/DomainClassifier.hpp \
	$(SRC_MISC_DIR)/EdgeIterator.hpp $(SRC_MISC_DIR)/Exponent.hpp \
	$(SRC_MISC_DIR)/FileTokenizer.hpp $(SRC_MISC_DIR)/Matrix3D.hpp \
	$(SRC_MISC_DIR)/MeshDomain1D.hpp \
	$(SRC_MISC_DIR)/MeshTransform.hpp $(SRC_MISC_DIR)/MsqDebug.hpp \
	$(SRC_MISC_DIR)/MsqError.hpp $(SRC_MISC_DIR)/MsqFPE.hpp \
	$(SRC_MISC_DIR)/MsqGeomPrim.hpp $(SRC_MISC_DIR)/MsqHessian.hpp \
	$(SRC_MISC_DIR)/MsqInterrupt.hpp $(SRC_MISC_DIR)/MsqMatrix.hpp \
	$(SRC_MISC_DIR)/MsqTimer.hpp $(SRC_MISC_DIR)/PlanarDomain.hpp \
	$(SRC_MISC_DIR)/SimpleStats.hpp \
	$(SRC_MISC_DIR)/SphericalDomain.hpp \
	$(SRC_MISC_DIR)/SymMatrix3D.hpp $(SRC_MISC_DIR)/Vector3D.hpp \
	$(SRC_MISC_DIR)/VtkTypeInfo.hpp \
	$(SRC_MISC_DIR)/XYPlanarDomain.hpp \
	$(SRC_MISC_DIR)/XYRectangle.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.hpp \
	$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/NullImprover.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/VertexMover.hpp \
	$(SRC_OPTSOLVER_DIR)/ConjugateGradient.hpp \
	$(SRC_OPTSOLVER_DIR)/FeasibleNewton.hpp \
	$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.hpp \
	$(SRC_OPTSOLVER_DIR)/QuasiNewton.hpp \
	$(SRC_OPTSOLVER_DIR)/SteepestDescent.hpp \
	$(SRC_OPTSOLVER_DIR)/NonGradient.hpp \
	$(SRC_OPTSOLVER_DIR)/TrustRegion.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.hpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/AveragingQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/EdgeQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/QualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.hpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexQM.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberFunctions.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/MeanRatioFunctions.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.hpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetReader.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightReader.hpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetric.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetric.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.hpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.hpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TScale.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSum.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.hpp
HEADERS = $(libmesquite_la_include_HEADERS) \
	$(nodist_libmesquite_la_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Control/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/MappingFunction/Lagrange/Makefile.am \
	$(srcdir)/MappingFunction/Linear/Makefile.am \
	$(srcdir)/MappingFunction/Makefile.am \
	$(srcdir)/Mesh/Makefile.am $(srcdir)/Misc/Makefile.am \
	$(srcdir)/ObjectiveFunction/Makefile.am \
	$(srcdir)/QualityAssessor/Makefile.am \
	$(srcdir)/QualityImprover/Makefile.am \
	$(srcdir)/QualityImprover/OptSolvers/Makefile.am \
	$(srcdir)/QualityImprover/Relaxation/Makefile.am \
	$(srcdir)/QualityMetric/Makefile.am \
	$(srcdir)/QualityMetric/Shape/Makefile.am \
	$(srcdir)/QualityMetric/Smoothness/Makefile.am \
	$(srcdir)/QualityMetric/TMP/Makefile.am \
	$(srcdir)/QualityMetric/Untangle/Makefile.am \
	$(srcdir)/QualityMetric/Volume/Makefile.am \
	$(srcdir)/TargetCalculator/Makefile.am \
	$(srcdir)/TargetMetric/Makefile.am \
	$(srcdir)/TargetMetric/Misc/Makefile.am \
	$(srcdir)/TargetMetric/Shape/Makefile.am \
	$(srcdir)/TargetMetric/ShapeOrient/Makefile.am \
	$(srcdir)/TargetMetric/ShapeSize/Makefile.am \
	$(srcdir)/TargetMetric/ShapeSizeOrient/Makefile.am \
	$(srcdir)/TargetMetric/Size/Makefile.am \
	$(srcdir)/TargetMetric/Untangle/Makefile.am \
	$(srcdir)/Wrappers/Makefile.am \
	$(top_srcdir)/./config_aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/grinder/Projects/mesquite-2.3.0/config_aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CPPFLAGS =  -DHAVE_TERMIOS_H -DHAVE_SYS_IOCTL_H -DHAVE_VSNPRINTF -DHAVE_VSPRINTF -DHAVE_CLOCK -DHAVE_TIMES -DHAVE_CBRT -DHAVE_FEENABLEEXCEPT -Iinclude -I$(srcdir)/include \
	$(MSQ_INCLUDES) $(IBASE_INCL)
AM_CXXFLAGS =   -Wall -pipe
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS = 
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/grinder/Projects/mesquite-2.3.0/config_aux/missing autoconf
AUTOHEADER = :
AUTOMAKE = ${SHELL} /home/grinder/Projects/mesquite-2.3.0/config_aux/missing automake-1.15
AWK = gawk
BIBTEX = no
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS =  -fPIC
CPP = cc -E
CPPFLAGS = 
CPPUNIT_CPPFLAGS = 
CPPUNIT_LDFLAGS =  -lcppunit -ldl
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -fPIC
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOT = no
DOT_DIR = 
DOXYGEN = no
DOXYGEN_CHI = no
DOXYGEN_HTML = no
DOXYGEN_HTMLHELP = no
DOXYGEN_LATEX = no
DOXYGEN_MAN = no
DOXYGEN_PDF = no
DOXYGEN_PS = no
DOXYGEN_RTF = no
DOXYGEN_XML = no
DSYMUTIL = 
DUMPBIN = 
DVIPS = no
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_DOXYGEN = 
ENABLE_IGEOM = no
ENABLE_IMESH = no
ENABLE_IMESHP = no
ENABLE_IREL = no
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_DOT = no
IBASE_INCL = 
IGEOM_DEFS = 
IGEOM_INCL = 
IGEOM_LIBS = 
IMESHP_DEFS = 
IMESHP_INCL = 
IMESHP_LIBS = 
IMESH_DEFS = 
IMESH_INCL = 
IMESH_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IREL_DEFS = 
IREL_INCL = 
IREL_LIBS = 
LATEX = no
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm
LIBTOOL = $(SHELL) $(top_builddir)/libtool 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/grinder/Projects/mesquite-2.3.0/config_aux/missing makeinfo
MANIFEST_TOOL = :
MESQUITE_IMESH_MAKE_INCLUDE = 
MESQUITE_LIBS =  -lm
MKDIR_P = /bin/mkdir -p
MSQ_LIBTOOL_FLAGS = 
MSQ_LIBTOOL_PREFIX = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = mesquite
PACKAGE_BUGREPORT = 
PACKAGE_NAME = Mesquite
PACKAGE_STRING = Mesquite 2.3.0
PACKAGE_TARNAME = mesquite
PACKAGE_URL = 
PACKAGE_VERSION = 2.3.0
PATH_SEPARATOR = :
PS2PDF = /usr/bin/ps2pdf
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TEST_MAKE_INCLUDE = include ../../src/cppflags.make
USER_GUIDE_PDF = no
USER_GUIDE_PS = no
UTIL_MAKE_INCLUDE = include ../src/cppflags.make
VERSION = 2.3.0
abs_builddir = /home/grinder/Projects/mesquite-2.3.0/src
abs_srcdir = /home/grinder/Projects/mesquite-2.3.0/src
abs_top_builddir = /home/grinder/Projects/mesquite-2.3.0
abs_top_srcdir = /home/grinder/Projects/mesquite-2.3.0
ac_ct_AR = ar
ac_ct_CC = cc
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/grinder/Projects/mesquite-2.3.0/config_aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# Need to be explicit about these for old versions of automake
OLD_AM_GENERATED_HDRS = include/mesquite_config.h \
                        include/mesquite_version.h 

EXTRA_DIST = $(OLD_AM_GENERATED_HDRS:=.in) \
		include/mesquite_config.win.h \
	        CMakeLists.txt 

BUILT_SOURCES = include/Mesquite_all_headers.hpp cppflags.make
MSQ_SRCS = $(SRC_MESH_DIR)/ArrayMesh.cpp \
	$(SRC_MESH_DIR)/ElementPatches.cpp \
	$(SRC_MESH_DIR)/ExtraData.cpp $(SRC_MESH_DIR)/GlobalPatch.cpp \
	$(SRC_MESH_DIR)/IdealElements.cpp \
	$(SRC_MESH_DIR)/MeshDecorator.cpp $(SRC_MESH_DIR)/MeshImpl.cpp \
	$(SRC_MESH_DIR)/MeshImplData.cpp \
	$(SRC_MESH_DIR)/MeshImplTags.cpp $(SRC_MESH_DIR)/MeshUtil.cpp \
	$(SRC_MESH_DIR)/MeshWriter.cpp \
	$(SRC_MESH_DIR)/MsqMeshEntity.cpp \
	$(SRC_MESH_DIR)/MsqVertex.cpp \
	$(SRC_MESH_DIR)/ParallelMeshImpl.cpp \
	$(SRC_MESH_DIR)/PatchData.cpp \
	$(SRC_MESH_DIR)/PatchIterator.cpp $(SRC_MESH_DIR)/PatchSet.cpp \
	$(SRC_MESH_DIR)/TagVertexMesh.cpp \
	$(SRC_MESH_DIR)/TopologyInfo.cpp \
	$(SRC_MESH_DIR)/VertexPatches.cpp $(MPI_SRCS) \
	$(SRC_CONTROL_DIR)/Instruction.cpp \
	$(SRC_CONTROL_DIR)/InstructionQueue.cpp \
	$(SRC_CONTROL_DIR)/IQInterface.cpp \
	$(SRC_CONTROL_DIR)/TerminationCriterion.cpp \
	$(SRC_CONTROL_DIR)/Settings.cpp \
	$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp \
	$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp \
	$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp \
	$(SRC_WRAPPERS_DIR)/Wrapper.cpp \
	$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp \
	$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp \
	$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp \
	$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp \
	$(SRC_MISC_DIR)/ConicDomain.cpp \
	$(SRC_MISC_DIR)/CylinderDomain.cpp \
	$(SRC_MISC_DIR)/DomainClassifier.cpp \
	$(SRC_MISC_DIR)/DomainUtil.cpp $(SRC_MISC_DIR)/DomainUtil.hpp \
	$(SRC_MISC_DIR)/EdgeIterator.cpp $(SRC_MISC_DIR)/Exponent.cpp \
	$(SRC_MISC_DIR)/FileTokenizer.cpp \
	$(SRC_MISC_DIR)/MeshDomain1D.cpp \
	$(SRC_MISC_DIR)/MeshTransform.cpp \
	$(SRC_MISC_DIR)/MesquiteVersion.cpp \
	$(SRC_MISC_DIR)/MsqDebug.cpp $(SRC_MISC_DIR)/MsqError.cpp \
	$(SRC_MISC_DIR)/MsqFPE.cpp $(SRC_MISC_DIR)/MsqGeomPrim.cpp \
	$(SRC_MISC_DIR)/MsqHessian.cpp \
	$(SRC_MISC_DIR)/MsqInterrupt.cpp $(SRC_MISC_DIR)/MsqTimer.cpp \
	$(SRC_MISC_DIR)/PlanarDomain.cpp \
	$(SRC_MISC_DIR)/SimpleStats.cpp \
	$(SRC_MISC_DIR)/SphericalDomain.cpp \
	$(SRC_MISC_DIR)/Vector3D.cpp $(SRC_MISC_DIR)/VtkTypeInfo.cpp \
	$(SRC_MISC_DIR)/XYPlanarDomain.cpp \
	$(SRC_MISC_DIR)/XYRectangle.cpp $(MSQ_ITAPS_COMMON_SRC) \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp \
	$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp \
	$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp \
	$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp \
	$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp \
	$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp \
	$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp \
	$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp \
	$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp \
	$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp \
	$(SRC_OPTSOLVER_DIR)/NonGradient.cpp \
	$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp \
	$(SRC_TARGETMETRIC_DIR)/TMetric.cpp \
	$(SRC_TARGETMETRIC_DIR)/TMPCommon.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMPDerivs.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp
MSQ_HDRS = $(SRC_MESH_DIR)/ArrayMesh.hpp \
	$(SRC_MESH_DIR)/ElementPatches.hpp \
	$(SRC_MESH_DIR)/ExtraData.hpp \
	$(SRC_MESH_DIR)/ExtraDataUser.hpp \
	$(SRC_MESH_DIR)/GlobalPatch.hpp \
	$(SRC_MESH_DIR)/IdealElements.hpp \
	$(SRC_MESH_DIR)/MeshDecorator.hpp $(SRC_MESH_DIR)/MeshImpl.hpp \
	$(SRC_MESH_DIR)/MeshImplData.hpp \
	$(SRC_MESH_DIR)/MeshImplTags.hpp $(SRC_MESH_DIR)/MeshUtil.hpp \
	$(SRC_MESH_DIR)/MeshWriter.hpp \
	$(SRC_MESH_DIR)/MsqFreeVertexIndexIterator.hpp \
	$(SRC_MESH_DIR)/MsqMeshEntity.hpp \
	$(SRC_MESH_DIR)/MsqVertex.hpp \
	$(SRC_MESH_DIR)/ParallelMeshImpl.hpp \
	$(SRC_MESH_DIR)/PatchData.hpp \
	$(SRC_MESH_DIR)/PatchIterator.hpp $(SRC_MESH_DIR)/PatchSet.hpp \
	$(SRC_MESH_DIR)/TagVertexMesh.hpp \
	$(SRC_MESH_DIR)/TopologyInfo.hpp \
	$(SRC_MESH_DIR)/VertexPatches.hpp $(MPI_INCS) \
	$(SRC_CONTROL_DIR)/Instruction.hpp \
	$(SRC_CONTROL_DIR)/InstructionQueue.hpp \
	$(SRC_CONTROL_DIR)/IQInterface.hpp \
	$(SRC_CONTROL_DIR)/TerminationCriterion.hpp \
	$(SRC_CONTROL_DIR)/Settings.hpp \
	$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.hpp \
	$(SRC_CONTROL_DIR)/VertexSlaver.hpp \
	$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/LaplaceWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/ShapeImprover.hpp \
	$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/UntangleWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.hpp \
	$(SRC_WRAPPERS_DIR)/Wrapper.hpp \
	$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.hpp \
	$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.hpp \
	$(SRC_MAPPINGFUNCTION_DIR)/Sample.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.hpp \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.hpp \
	$(SRC_MISC_DIR)/BoundedCylinderDomain.hpp \
	$(SRC_MISC_DIR)/Bits.hpp $(SRC_MISC_DIR)/ConicDomain.hpp \
	$(SRC_MISC_DIR)/CylinderDomain.hpp \
	$(SRC_MISC_DIR)/DomainClassifier.hpp \
	$(SRC_MISC_DIR)/EdgeIterator.hpp $(SRC_MISC_DIR)/Exponent.hpp \
	$(SRC_MISC_DIR)/FileTokenizer.hpp $(SRC_MISC_DIR)/Matrix3D.hpp \
	$(SRC_MISC_DIR)/MeshDomain1D.hpp \
	$(SRC_MISC_DIR)/MeshTransform.hpp $(SRC_MISC_DIR)/MsqDebug.hpp \
	$(SRC_MISC_DIR)/MsqError.hpp $(SRC_MISC_DIR)/MsqFPE.hpp \
	$(SRC_MISC_DIR)/MsqGeomPrim.hpp $(SRC_MISC_DIR)/MsqHessian.hpp \
	$(SRC_MISC_DIR)/MsqInterrupt.hpp $(SRC_MISC_DIR)/MsqMatrix.hpp \
	$(SRC_MISC_DIR)/MsqTimer.hpp $(SRC_MISC_DIR)/PlanarDomain.hpp \
	$(SRC_MISC_DIR)/SimpleStats.hpp \
	$(SRC_MISC_DIR)/SphericalDomain.hpp \
	$(SRC_MISC_DIR)/SymMatrix3D.hpp $(SRC_MISC_DIR)/Vector3D.hpp \
	$(SRC_MISC_DIR)/VtkTypeInfo.hpp \
	$(SRC_MISC_DIR)/XYPlanarDomain.hpp \
	$(SRC_MISC_DIR)/XYRectangle.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.hpp \
	$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.hpp \
	$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/NullImprover.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.hpp \
	$(SRC_QUALITYIMPROVER_DIR)/VertexMover.hpp \
	$(SRC_OPTSOLVER_DIR)/ConjugateGradient.hpp \
	$(SRC_OPTSOLVER_DIR)/FeasibleNewton.hpp \
	$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.hpp \
	$(SRC_OPTSOLVER_DIR)/QuasiNewton.hpp \
	$(SRC_OPTSOLVER_DIR)/SteepestDescent.hpp \
	$(SRC_OPTSOLVER_DIR)/NonGradient.hpp \
	$(SRC_OPTSOLVER_DIR)/TrustRegion.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.hpp \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.hpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/AveragingQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/EdgeQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ElementQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/QualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.hpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.hpp \
	$(SRC_QUALITYMETRIC_DIR)/VertexQM.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberFunctions.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/MeanRatioFunctions.hpp \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.hpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.hpp \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetReader.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.hpp \
	$(SRC_TARGETCALCULATOR_DIR)/WeightReader.hpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetric.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetric.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.hpp \
	$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.hpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.hpp \
	$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TScale.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.hpp \
	$(SRC_TARGETMETRIC_MISC_DIR)/TSum.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.hpp \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.hpp \
	$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.hpp \
	$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.hpp \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.hpp
MSQ_INCLUDES = -I$(top_srcdir)/src/$(SRC_MESH_DIR) \
	-I$(top_srcdir)/src/$(SRC_CONTROL_DIR) \
	-I$(top_srcdir)/src/$(SRC_WRAPPERS_DIR) \
	-I$(top_srcdir)/src/$(SRC_MAPPINGFUNCTION_DIR) \
	-I$(top_srcdir)/src/$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR) \
	-I$(top_srcdir)/src/$(SRC_MAPPINGFUNCTION_LINEAR_DIR) \
	-I$(top_srcdir)/src/$(SRC_MISC_DIR) \
	-I$(top_srcdir)/src/$(SRC_OBJECTIVEFUNCTION_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYASSESSOR_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYIMPROVER_DIR) \
	-I$(top_srcdir)/src/$(SRC_OPTSOLVER_DIR) \
	-I$(top_srcdir)/src/$(SRC_RELAXATIONSMOOTHERS_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_DIR)/Debug \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_SHAPE_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_TMP_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_UNTANGLE_DIR) \
	-I$(top_srcdir)/src/$(SRC_QUALITYMETRIC_VOLUME_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETCALCULATOR_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_MISC_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_SHAPE_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_SHAPESIZE_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_SSO_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_SIZE_DIR) \
	-I$(top_srcdir)/src/$(SRC_TARGETMETRIC_UNTANGLE_DIR)
INCLUDED_MAKEFILES = $(SRC_MESH_DIR)/Makefile.am \
	$(SRC_CONTROL_DIR)/Makefile.am $(SRC_WRAPPERS_DIR)/Makefile.am \
	$(SRC_MAPPINGFUNCTION_DIR)/Makefile.am \
	$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/Makefile.am \
	$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/Makefile.am \
	$(SRC_MISC_DIR)/Makefile.am \
	$(SRC_OBJECTIVEFUNCTION_DIR)/Makefile.am \
	$(SRC_QUALITYASSESSOR_DIR)/Makefile.am \
	$(SRC_QUALITYIMPROVER_DIR)/Makefile.am \
	$(SRC_OPTSOLVER_DIR)/Makefile.am \
	$(SRC_RELAXATIONSMOOTHERS_DIR)/Makefile.am \
	$(SRC_QUALITYMETRIC_DIR)/Makefile.am \
	$(SRC_QUALITYMETRIC_SHAPE_DIR)/Makefile.am \
	$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/Makefile.am \
	$(SRC_QUALITYMETRIC_TMP_DIR)/Makefile.am \
	$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/Makefile.am \
	$(SRC_QUALITYMETRIC_VOLUME_DIR)/Makefile.am \
	$(SRC_TARGETCALCULATOR_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_MISC_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_SHAPE_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_SSO_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_MISC_DIR)/Makefile.am \
	$(SRC_TARGETMETRIC_UNTANGLE_DIR)/Makefile.am
lib_LTLIBRARIES = libmesquite.la
libmesquite_la_DEPENDENCIES = 
# Tell libtool that there are no undefined symbols when linking 
# the library.  This means that either the symbol is defined in
# the library or we include a -lname argument to specify which 
# other library provides the symbol.  Libtool requires this 
# guarantee to generate libraries on platforms for which shared
# libs cannot have any unmet depenendencies (windows, and maybe AIX)
libmesquite_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined
SRC_MESH_DIR = Mesh
MPI_SRCS = $(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp
#MPI_SRCS = $(SRC_MESH_DIR)/ParallelHelper.cpp
MPI_INCS = $(SRC_MESH_DIR)/ParallelHelperNoMPIStub.hpp
#MPI_INCS = $(SRC_MESH_DIR)/ParallelHelper.hpp
SRC_CONTROL_DIR = Control
SRC_WRAPPERS_DIR = Wrappers
SRC_MAPPINGFUNCTION_DIR = MappingFunction
SRC_MAPPINGFUNCTION_LAGRANGE_DIR = MappingFunction/Lagrange
SRC_MAPPINGFUNCTION_LINEAR_DIR = MappingFunction/Linear
SRC_MISC_DIR = Misc
MSQ_ITAPS_COMMON_SRC = 
#MSQ_ITAPS_COMMON_SRC = $(SRC_MISC_DIR)/MsqIBase.cpp \
#                         $(SRC_MISC_DIR)/MsqIBase.hpp

SRC_OBJECTIVEFUNCTION_DIR = ObjectiveFunction
SRC_QUALITYASSESSOR_DIR = QualityAssessor
SRC_QUALITYIMPROVER_DIR = QualityImprover
SRC_OPTSOLVER_DIR = QualityImprover/OptSolvers
SRC_RELAXATIONSMOOTHERS_DIR = QualityImprover/Relaxation
SRC_QUALITYMETRIC_DIR = QualityMetric
SRC_QUALITYMETRIC_SHAPE_DIR = QualityMetric/Shape
SRC_QUALITYMETRIC_SMOOTHNESS_DIR = QualityMetric/Smoothness
SRC_QUALITYMETRIC_TMP_DIR = QualityMetric/TMP
SRC_QUALITYMETRIC_UNTANGLE_DIR = QualityMetric/Untangle
SRC_QUALITYMETRIC_VOLUME_DIR = QualityMetric/Volume
SRC_TARGETCALCULATOR_DIR = TargetCalculator
SRC_TARGETMETRIC_DIR = TargetMetric
SRC_TARGETMETRIC_MISC_DIR = TargetMetric/Misc
SRC_TARGETMETRIC_SHAPE_DIR = TargetMetric/Shape
SRC_TARGETMETRIC_SHAPE_ORIENT_DIR = TargetMetric/ShapeOrient
SRC_TARGETMETRIC_SHAPESIZE_DIR = TargetMetric/ShapeSize
SRC_TARGETMETRIC_SSO_DIR = TargetMetric/ShapeSizeOrient
SRC_TARGETMETRIC_SIZE_DIR = TargetMetric/Size
SRC_TARGETMETRIC_UNTANGLE_DIR = TargetMetric/Untangle
libmesquite_la_includedir = $(includedir)
libmesquite_la_nodist_includedir = $(includedir)
libmesquite_la_SOURCES = $(MSQ_SRCS) 
libmesquite_la_include_HEADERS = include/Mesquite.hpp \
                                 include/MeshInterface.hpp \
				 include/ParallelMeshInterface.hpp \
				 include/ParallelHelperInterface.hpp \
				 include/CurveDomain.hpp \
                                 $(MSQ_HDRS)


# don't put these generated headers into the distribution
nodist_libmesquite_la_include_HEADERS = include/Mesquite_all_headers.hpp \
					$(top_builddir)/src/include/mesquite_config.h \
				 	$(top_builddir)/src/include/mesquite_version.h 

libmesquite_la_LIBADD = $(MESQUITE_LIBS)
MOSTLYCLEANFILES = include/Mesquite_all_headers.hpp 
DISTCLEANFILES = cppflags.make  $(OLD_AM_GENERATED_HDRS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Mesh/Makefile.am $(srcdir)/Control/Makefile.am $(srcdir)/Wrappers/Makefile.am $(srcdir)/MappingFunction/Makefile.am $(srcdir)/MappingFunction/Lagrange/Makefile.am $(srcdir)/MappingFunction/Linear/Makefile.am $(srcdir)/Misc/Makefile.am $(srcdir)/ObjectiveFunction/Makefile.am $(srcdir)/QualityAssessor/Makefile.am $(srcdir)/QualityImprover/Makefile.am $(srcdir)/QualityImprover/OptSolvers/Makefile.am $(srcdir)/QualityImprover/Relaxation/Makefile.am $(srcdir)/QualityMetric/Makefile.am $(srcdir)/QualityMetric/Shape/Makefile.am $(srcdir)/QualityMetric/Smoothness/Makefile.am $(srcdir)/QualityMetric/TMP/Makefile.am $(srcdir)/QualityMetric/Untangle/Makefile.am $(srcdir)/QualityMetric/Volume/Makefile.am $(srcdir)/TargetCalculator/Makefile.am $(srcdir)/TargetMetric/Makefile.am $(srcdir)/TargetMetric/Misc/Makefile.am $(srcdir)/TargetMetric/Shape/Makefile.am $(srcdir)/TargetMetric/ShapeOrient/Makefile.am $(srcdir)/TargetMetric/ShapeSize/Makefile.am $(srcdir)/TargetMetric/ShapeSizeOrient/Makefile.am $(srcdir)/TargetMetric/Size/Makefile.am $(srcdir)/TargetMetric/Untangle/Makefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Mesh/Makefile.am $(srcdir)/Control/Makefile.am $(srcdir)/Wrappers/Makefile.am $(srcdir)/MappingFunction/Makefile.am $(srcdir)/MappingFunction/Lagrange/Makefile.am $(srcdir)/MappingFunction/Linear/Makefile.am $(srcdir)/Misc/Makefile.am $(srcdir)/ObjectiveFunction/Makefile.am $(srcdir)/QualityAssessor/Makefile.am $(srcdir)/QualityImprover/Makefile.am $(srcdir)/QualityImprover/OptSolvers/Makefile.am $(srcdir)/QualityImprover/Relaxation/Makefile.am $(srcdir)/QualityMetric/Makefile.am $(srcdir)/QualityMetric/Shape/Makefile.am $(srcdir)/QualityMetric/Smoothness/Makefile.am $(srcdir)/QualityMetric/TMP/Makefile.am $(srcdir)/QualityMetric/Untangle/Makefile.am $(srcdir)/QualityMetric/Volume/Makefile.am $(srcdir)/TargetCalculator/Makefile.am $(srcdir)/TargetMetric/Makefile.am $(srcdir)/TargetMetric/Misc/Makefile.am $(srcdir)/TargetMetric/Shape/Makefile.am $(srcdir)/TargetMetric/ShapeOrient/Makefile.am $(srcdir)/TargetMetric/ShapeSize/Makefile.am $(srcdir)/TargetMetric/ShapeSizeOrient/Makefile.am $(srcdir)/TargetMetric/Size/Makefile.am $(srcdir)/TargetMetric/Untangle/Makefile.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libmesquite.la: $(libmesquite_la_OBJECTS) $(libmesquite_la_DEPENDENCIES) $(EXTRA_libmesquite_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libmesquite_la_LINK) -rpath $(libdir) $(libmesquite_la_OBJECTS) $(libmesquite_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AWMetric.Plo
include ./$(DEPDIR)/AWMetricBarrier.Plo
include ./$(DEPDIR)/AWMetricNonBarrier.Plo
include ./$(DEPDIR)/AWQualityMetric.Plo
include ./$(DEPDIR)/AWShape2DB1.Plo
include ./$(DEPDIR)/AWShape2DNB1.Plo
include ./$(DEPDIR)/AWShape2DNB2.Plo
include ./$(DEPDIR)/AWShapeOrientNB1.Plo
include ./$(DEPDIR)/AWShapeSizeB1.Plo
include ./$(DEPDIR)/AWShapeSizeOrientNB1.Plo
include ./$(DEPDIR)/AWSizeB1.Plo
include ./$(DEPDIR)/AWSizeNB1.Plo
include ./$(DEPDIR)/AWUntangleBeta.Plo
include ./$(DEPDIR)/AddQualityMetric.Plo
include ./$(DEPDIR)/AffineMapMetric.Plo
include ./$(DEPDIR)/ArrayMesh.Plo
include ./$(DEPDIR)/AspectRatioGammaQualityMetric.Plo
include ./$(DEPDIR)/AveragingQM.Plo
include ./$(DEPDIR)/BoundedCylinderDomain.Plo
include ./$(DEPDIR)/CachingTargetCalculator.Plo
include ./$(DEPDIR)/CompareQM.Plo
include ./$(DEPDIR)/CompositeOFAdd.Plo
include ./$(DEPDIR)/CompositeOFMultiply.Plo
include ./$(DEPDIR)/CompositeOFScalarAdd.Plo
include ./$(DEPDIR)/CompositeOFScalarMultiply.Plo
include ./$(DEPDIR)/ConditionNumberQualityMetric.Plo
include ./$(DEPDIR)/ConicDomain.Plo
include ./$(DEPDIR)/ConjugateGradient.Plo
include ./$(DEPDIR)/CylinderDomain.Plo
include ./$(DEPDIR)/DeformingDomainWrapper.Plo
include ./$(DEPDIR)/DomainClassifier.Plo
include ./$(DEPDIR)/DomainUtil.Plo
include ./$(DEPDIR)/EdgeIterator.Plo
include ./$(DEPDIR)/EdgeLengthMetric.Plo
include ./$(DEPDIR)/EdgeLengthQualityMetric.Plo
include ./$(DEPDIR)/EdgeLengthRangeQualityMetric.Plo
include ./$(DEPDIR)/EdgeQM.Plo
include ./$(DEPDIR)/ElemSampleQM.Plo
include ./$(DEPDIR)/ElementAvgQM.Plo
include ./$(DEPDIR)/ElementMaxQM.Plo
include ./$(DEPDIR)/ElementPMeanP.Plo
include ./$(DEPDIR)/ElementPatches.Plo
include ./$(DEPDIR)/ElementQM.Plo
include ./$(DEPDIR)/Exponent.Plo
include ./$(DEPDIR)/ExtraData.Plo
include ./$(DEPDIR)/FeasibleNewton.Plo
include ./$(DEPDIR)/FileTokenizer.Plo
include ./$(DEPDIR)/GlobalPatch.Plo
include ./$(DEPDIR)/HexLagrangeShape.Plo
include ./$(DEPDIR)/IQInterface.Plo
include ./$(DEPDIR)/IdealElements.Plo
include ./$(DEPDIR)/IdealShapeTarget.Plo
include ./$(DEPDIR)/IdealWeightInverseMeanRatio.Plo
include ./$(DEPDIR)/IdealWeightMeanRatio.Plo
include ./$(DEPDIR)/Instruction.Plo
include ./$(DEPDIR)/InstructionQueue.Plo
include ./$(DEPDIR)/InvTransBarrier.Plo
include ./$(DEPDIR)/InverseMetricWeight.Plo
include ./$(DEPDIR)/JacobianCalculator.Plo
include ./$(DEPDIR)/LInfTemplate.Plo
include ./$(DEPDIR)/LPtoPTemplate.Plo
include ./$(DEPDIR)/LVQDTargetCalculator.Plo
include ./$(DEPDIR)/LambdaConstant.Plo
include ./$(DEPDIR)/LambdaTarget.Plo
include ./$(DEPDIR)/LaplaceWrapper.Plo
include ./$(DEPDIR)/LaplacianSmoother.Plo
include ./$(DEPDIR)/LinearHexahedron.Plo
include ./$(DEPDIR)/LinearPrism.Plo
include ./$(DEPDIR)/LinearPyramid.Plo
include ./$(DEPDIR)/LinearQuadrilateral.Plo
include ./$(DEPDIR)/LinearTetrahedron.Plo
include ./$(DEPDIR)/LinearTriangle.Plo
include ./$(DEPDIR)/LocalSizeQualityMetric.Plo
include ./$(DEPDIR)/MappingFunction.Plo
include ./$(DEPDIR)/MaxTemplate.Plo
include ./$(DEPDIR)/MeshDecorator.Plo
include ./$(DEPDIR)/MeshDomain1D.Plo
include ./$(DEPDIR)/MeshImpl.Plo
include ./$(DEPDIR)/MeshImplData.Plo
include ./$(DEPDIR)/MeshImplTags.Plo
include ./$(DEPDIR)/MeshTransform.Plo
include ./$(DEPDIR)/MeshUtil.Plo
include ./$(DEPDIR)/MeshWriter.Plo
include ./$(DEPDIR)/MesquiteVersion.Plo
include ./$(DEPDIR)/MetricWeight.Plo
include ./$(DEPDIR)/MsqDebug.Plo
include ./$(DEPDIR)/MsqError.Plo
include ./$(DEPDIR)/MsqFPE.Plo
include ./$(DEPDIR)/MsqGeomPrim.Plo
include ./$(DEPDIR)/MsqHessian.Plo
include ./$(DEPDIR)/MsqIBase.Plo
include ./$(DEPDIR)/MsqInterrupt.Plo
include ./$(DEPDIR)/MsqMeshEntity.Plo
include ./$(DEPDIR)/MsqTimer.Plo
include ./$(DEPDIR)/MsqVertex.Plo
include ./$(DEPDIR)/MultiplyQualityMetric.Plo
include ./$(DEPDIR)/NodeSet.Plo
include ./$(DEPDIR)/NonGradient.Plo
include ./$(DEPDIR)/NonSmoothDescent.Plo
include ./$(DEPDIR)/NumericalQM.Plo
include ./$(DEPDIR)/OFEvaluator.Plo
include ./$(DEPDIR)/ObjectiveFunction.Plo
include ./$(DEPDIR)/ObjectiveFunctionTemplate.Plo
include ./$(DEPDIR)/PMeanPMetric.Plo
include ./$(DEPDIR)/PMeanPTemplate.Plo
include ./$(DEPDIR)/ParallelHelper.Plo
include ./$(DEPDIR)/ParallelHelperNoMPIStub.Plo
include ./$(DEPDIR)/ParallelMeshImpl.Plo
include ./$(DEPDIR)/PatchData.Plo
include ./$(DEPDIR)/PatchIterator.Plo
include ./$(DEPDIR)/PatchPowerMeanP.Plo
include ./$(DEPDIR)/PatchSet.Plo
include ./$(DEPDIR)/PatchSetUser.Plo
include ./$(DEPDIR)/PaverMinEdgeLengthWrapper.Plo
include ./$(DEPDIR)/PlanarDomain.Plo
include ./$(DEPDIR)/PowerQualityMetric.Plo
include ./$(DEPDIR)/QuadLagrangeShape.Plo
include ./$(DEPDIR)/QualityAssessor.Plo
include ./$(DEPDIR)/QualityImprover.Plo
include ./$(DEPDIR)/QualityMetric.Plo
include ./$(DEPDIR)/QuasiNewton.Plo
include ./$(DEPDIR)/Randomize.Plo
include ./$(DEPDIR)/RefMeshTargetCalculator.Plo
include ./$(DEPDIR)/RefSizeTargetCalculator.Plo
include ./$(DEPDIR)/ReferenceMesh.Plo
include ./$(DEPDIR)/RelaxationSmoother.Plo
include ./$(DEPDIR)/RemainingWeight.Plo
include ./$(DEPDIR)/Sample.Plo
include ./$(DEPDIR)/ScalarAddQualityMetric.Plo
include ./$(DEPDIR)/ScalarMultiplyQualityMetric.Plo
include ./$(DEPDIR)/Settings.Plo
include ./$(DEPDIR)/ShapeImprovementWrapper.Plo
include ./$(DEPDIR)/ShapeImprover.Plo
include ./$(DEPDIR)/SimpleStats.Plo
include ./$(DEPDIR)/SizeAdaptShapeWrapper.Plo
include ./$(DEPDIR)/SizeMetric.Plo
include ./$(DEPDIR)/SlaveBoundaryVertices.Plo
include ./$(DEPDIR)/SmartLaplacianSmoother.Plo
include ./$(DEPDIR)/SphericalDomain.Plo
include ./$(DEPDIR)/StdDevTemplate.Plo
include ./$(DEPDIR)/SteepestDescent.Plo
include ./$(DEPDIR)/TInverseMeanRatio.Plo
include ./$(DEPDIR)/TMPQualityMetric.Plo
include ./$(DEPDIR)/TMetric.Plo
include ./$(DEPDIR)/TMetricBarrier.Plo
include ./$(DEPDIR)/TMetricNonBarrier.Plo
include ./$(DEPDIR)/TMixed.Plo
include ./$(DEPDIR)/TOffset.Plo
include ./$(DEPDIR)/TPower2.Plo
include ./$(DEPDIR)/TQualityMetric.Plo
include ./$(DEPDIR)/TScale.Plo
include ./$(DEPDIR)/TShape2DNB2.Plo
include ./$(DEPDIR)/TShape3DB2.Plo
include ./$(DEPDIR)/TShapeB1.Plo
include ./$(DEPDIR)/TShapeNB1.Plo
include ./$(DEPDIR)/TShapeOrientB1.Plo
include ./$(DEPDIR)/TShapeOrientB2.Plo
include ./$(DEPDIR)/TShapeOrientNB1.Plo
include ./$(DEPDIR)/TShapeOrientNB2.Plo
include ./$(DEPDIR)/TShapeSize2DB2.Plo
include ./$(DEPDIR)/TShapeSize2DNB1.Plo
include ./$(DEPDIR)/TShapeSize2DNB2.Plo
include ./$(DEPDIR)/TShapeSize3DB2.Plo
include ./$(DEPDIR)/TShapeSize3DB4.Plo
include ./$(DEPDIR)/TShapeSize3DNB1.Plo
include ./$(DEPDIR)/TShapeSizeB1.Plo
include ./$(DEPDIR)/TShapeSizeB3.Plo
include ./$(DEPDIR)/TShapeSizeNB3.Plo
include ./$(DEPDIR)/TShapeSizeOrientB1.Plo
include ./$(DEPDIR)/TShapeSizeOrientB2.Plo
include ./$(DEPDIR)/TShapeSizeOrientNB1.Plo
include ./$(DEPDIR)/TSizeB1.Plo
include ./$(DEPDIR)/TSizeNB1.Plo
include ./$(DEPDIR)/TSquared.Plo
include ./$(DEPDIR)/TSum.Plo
include ./$(DEPDIR)/TTau.Plo
include ./$(DEPDIR)/TUntangle1.Plo
include ./$(DEPDIR)/TUntangleBeta.Plo
include ./$(DEPDIR)/TUntangleMu.Plo
include ./$(DEPDIR)/TagVertexMesh.Plo
include ./$(DEPDIR)/TargetCalculator.Plo
include ./$(DEPDIR)/TargetMetricUtil.Plo
include ./$(DEPDIR)/TargetReader.Plo
include ./$(DEPDIR)/TargetWriter.Plo
include ./$(DEPDIR)/TerminationCriterion.Plo
include ./$(DEPDIR)/TetDihedralWeight.Plo
include ./$(DEPDIR)/TetLagrangeShape.Plo
include ./$(DEPDIR)/TopologyInfo.Plo
include ./$(DEPDIR)/TriLagrangeShape.Plo
include ./$(DEPDIR)/TrustRegion.Plo
include ./$(DEPDIR)/UntangleBetaQualityMetric.Plo
include ./$(DEPDIR)/UntangleWrapper.Plo
include ./$(DEPDIR)/VarianceTemplate.Plo
include ./$(DEPDIR)/Vector3D.Plo
include ./$(DEPDIR)/VertexConditionNumberQualityMetric.Plo
include ./$(DEPDIR)/VertexMaxQM.Plo
include ./$(DEPDIR)/VertexMover.Plo
include ./$(DEPDIR)/VertexPMeanP.Plo
include ./$(DEPDIR)/VertexPatches.Plo
include ./$(DEPDIR)/VertexQM.Plo
include ./$(DEPDIR)/ViscousCFDTetShapeWrapper.Plo
include ./$(DEPDIR)/VtkTypeInfo.Plo
include ./$(DEPDIR)/WeightCalculator.Plo
include ./$(DEPDIR)/WeightReader.Plo
include ./$(DEPDIR)/Wrapper.Plo
include ./$(DEPDIR)/XYPlanarDomain.Plo
include ./$(DEPDIR)/XYRectangle.Plo

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

ArrayMesh.lo: $(SRC_MESH_DIR)/ArrayMesh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ArrayMesh.lo -MD -MP -MF $(DEPDIR)/ArrayMesh.Tpo -c -o ArrayMesh.lo `test -f '$(SRC_MESH_DIR)/ArrayMesh.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ArrayMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ArrayMesh.Tpo $(DEPDIR)/ArrayMesh.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/ArrayMesh.cpp' object='ArrayMesh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ArrayMesh.lo `test -f '$(SRC_MESH_DIR)/ArrayMesh.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ArrayMesh.cpp

ElementPatches.lo: $(SRC_MESH_DIR)/ElementPatches.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElementPatches.lo -MD -MP -MF $(DEPDIR)/ElementPatches.Tpo -c -o ElementPatches.lo `test -f '$(SRC_MESH_DIR)/ElementPatches.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ElementPatches.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ElementPatches.Tpo $(DEPDIR)/ElementPatches.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/ElementPatches.cpp' object='ElementPatches.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElementPatches.lo `test -f '$(SRC_MESH_DIR)/ElementPatches.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ElementPatches.cpp

ExtraData.lo: $(SRC_MESH_DIR)/ExtraData.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ExtraData.lo -MD -MP -MF $(DEPDIR)/ExtraData.Tpo -c -o ExtraData.lo `test -f '$(SRC_MESH_DIR)/ExtraData.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ExtraData.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ExtraData.Tpo $(DEPDIR)/ExtraData.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/ExtraData.cpp' object='ExtraData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExtraData.lo `test -f '$(SRC_MESH_DIR)/ExtraData.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ExtraData.cpp

GlobalPatch.lo: $(SRC_MESH_DIR)/GlobalPatch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GlobalPatch.lo -MD -MP -MF $(DEPDIR)/GlobalPatch.Tpo -c -o GlobalPatch.lo `test -f '$(SRC_MESH_DIR)/GlobalPatch.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/GlobalPatch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/GlobalPatch.Tpo $(DEPDIR)/GlobalPatch.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/GlobalPatch.cpp' object='GlobalPatch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GlobalPatch.lo `test -f '$(SRC_MESH_DIR)/GlobalPatch.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/GlobalPatch.cpp

IdealElements.lo: $(SRC_MESH_DIR)/IdealElements.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IdealElements.lo -MD -MP -MF $(DEPDIR)/IdealElements.Tpo -c -o IdealElements.lo `test -f '$(SRC_MESH_DIR)/IdealElements.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/IdealElements.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/IdealElements.Tpo $(DEPDIR)/IdealElements.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/IdealElements.cpp' object='IdealElements.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IdealElements.lo `test -f '$(SRC_MESH_DIR)/IdealElements.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/IdealElements.cpp

MeshDecorator.lo: $(SRC_MESH_DIR)/MeshDecorator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshDecorator.lo -MD -MP -MF $(DEPDIR)/MeshDecorator.Tpo -c -o MeshDecorator.lo `test -f '$(SRC_MESH_DIR)/MeshDecorator.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshDecorator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshDecorator.Tpo $(DEPDIR)/MeshDecorator.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MeshDecorator.cpp' object='MeshDecorator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshDecorator.lo `test -f '$(SRC_MESH_DIR)/MeshDecorator.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshDecorator.cpp

MeshImpl.lo: $(SRC_MESH_DIR)/MeshImpl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshImpl.lo -MD -MP -MF $(DEPDIR)/MeshImpl.Tpo -c -o MeshImpl.lo `test -f '$(SRC_MESH_DIR)/MeshImpl.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshImpl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshImpl.Tpo $(DEPDIR)/MeshImpl.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MeshImpl.cpp' object='MeshImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshImpl.lo `test -f '$(SRC_MESH_DIR)/MeshImpl.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshImpl.cpp

MeshImplData.lo: $(SRC_MESH_DIR)/MeshImplData.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshImplData.lo -MD -MP -MF $(DEPDIR)/MeshImplData.Tpo -c -o MeshImplData.lo `test -f '$(SRC_MESH_DIR)/MeshImplData.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshImplData.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshImplData.Tpo $(DEPDIR)/MeshImplData.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MeshImplData.cpp' object='MeshImplData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshImplData.lo `test -f '$(SRC_MESH_DIR)/MeshImplData.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshImplData.cpp

MeshImplTags.lo: $(SRC_MESH_DIR)/MeshImplTags.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshImplTags.lo -MD -MP -MF $(DEPDIR)/MeshImplTags.Tpo -c -o MeshImplTags.lo `test -f '$(SRC_MESH_DIR)/MeshImplTags.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshImplTags.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshImplTags.Tpo $(DEPDIR)/MeshImplTags.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MeshImplTags.cpp' object='MeshImplTags.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshImplTags.lo `test -f '$(SRC_MESH_DIR)/MeshImplTags.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshImplTags.cpp

MeshUtil.lo: $(SRC_MESH_DIR)/MeshUtil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshUtil.lo -MD -MP -MF $(DEPDIR)/MeshUtil.Tpo -c -o MeshUtil.lo `test -f '$(SRC_MESH_DIR)/MeshUtil.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshUtil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshUtil.Tpo $(DEPDIR)/MeshUtil.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MeshUtil.cpp' object='MeshUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshUtil.lo `test -f '$(SRC_MESH_DIR)/MeshUtil.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshUtil.cpp

MeshWriter.lo: $(SRC_MESH_DIR)/MeshWriter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshWriter.lo -MD -MP -MF $(DEPDIR)/MeshWriter.Tpo -c -o MeshWriter.lo `test -f '$(SRC_MESH_DIR)/MeshWriter.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshWriter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshWriter.Tpo $(DEPDIR)/MeshWriter.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MeshWriter.cpp' object='MeshWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshWriter.lo `test -f '$(SRC_MESH_DIR)/MeshWriter.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MeshWriter.cpp

MsqMeshEntity.lo: $(SRC_MESH_DIR)/MsqMeshEntity.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqMeshEntity.lo -MD -MP -MF $(DEPDIR)/MsqMeshEntity.Tpo -c -o MsqMeshEntity.lo `test -f '$(SRC_MESH_DIR)/MsqMeshEntity.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MsqMeshEntity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqMeshEntity.Tpo $(DEPDIR)/MsqMeshEntity.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MsqMeshEntity.cpp' object='MsqMeshEntity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqMeshEntity.lo `test -f '$(SRC_MESH_DIR)/MsqMeshEntity.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MsqMeshEntity.cpp

MsqVertex.lo: $(SRC_MESH_DIR)/MsqVertex.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqVertex.lo -MD -MP -MF $(DEPDIR)/MsqVertex.Tpo -c -o MsqVertex.lo `test -f '$(SRC_MESH_DIR)/MsqVertex.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MsqVertex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqVertex.Tpo $(DEPDIR)/MsqVertex.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/MsqVertex.cpp' object='MsqVertex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqVertex.lo `test -f '$(SRC_MESH_DIR)/MsqVertex.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/MsqVertex.cpp

ParallelMeshImpl.lo: $(SRC_MESH_DIR)/ParallelMeshImpl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParallelMeshImpl.lo -MD -MP -MF $(DEPDIR)/ParallelMeshImpl.Tpo -c -o ParallelMeshImpl.lo `test -f '$(SRC_MESH_DIR)/ParallelMeshImpl.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ParallelMeshImpl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ParallelMeshImpl.Tpo $(DEPDIR)/ParallelMeshImpl.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/ParallelMeshImpl.cpp' object='ParallelMeshImpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParallelMeshImpl.lo `test -f '$(SRC_MESH_DIR)/ParallelMeshImpl.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ParallelMeshImpl.cpp

PatchData.lo: $(SRC_MESH_DIR)/PatchData.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatchData.lo -MD -MP -MF $(DEPDIR)/PatchData.Tpo -c -o PatchData.lo `test -f '$(SRC_MESH_DIR)/PatchData.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/PatchData.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PatchData.Tpo $(DEPDIR)/PatchData.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/PatchData.cpp' object='PatchData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatchData.lo `test -f '$(SRC_MESH_DIR)/PatchData.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/PatchData.cpp

PatchIterator.lo: $(SRC_MESH_DIR)/PatchIterator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatchIterator.lo -MD -MP -MF $(DEPDIR)/PatchIterator.Tpo -c -o PatchIterator.lo `test -f '$(SRC_MESH_DIR)/PatchIterator.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/PatchIterator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PatchIterator.Tpo $(DEPDIR)/PatchIterator.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/PatchIterator.cpp' object='PatchIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatchIterator.lo `test -f '$(SRC_MESH_DIR)/PatchIterator.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/PatchIterator.cpp

PatchSet.lo: $(SRC_MESH_DIR)/PatchSet.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatchSet.lo -MD -MP -MF $(DEPDIR)/PatchSet.Tpo -c -o PatchSet.lo `test -f '$(SRC_MESH_DIR)/PatchSet.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/PatchSet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PatchSet.Tpo $(DEPDIR)/PatchSet.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/PatchSet.cpp' object='PatchSet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatchSet.lo `test -f '$(SRC_MESH_DIR)/PatchSet.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/PatchSet.cpp

TagVertexMesh.lo: $(SRC_MESH_DIR)/TagVertexMesh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TagVertexMesh.lo -MD -MP -MF $(DEPDIR)/TagVertexMesh.Tpo -c -o TagVertexMesh.lo `test -f '$(SRC_MESH_DIR)/TagVertexMesh.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/TagVertexMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TagVertexMesh.Tpo $(DEPDIR)/TagVertexMesh.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/TagVertexMesh.cpp' object='TagVertexMesh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TagVertexMesh.lo `test -f '$(SRC_MESH_DIR)/TagVertexMesh.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/TagVertexMesh.cpp

TopologyInfo.lo: $(SRC_MESH_DIR)/TopologyInfo.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TopologyInfo.lo -MD -MP -MF $(DEPDIR)/TopologyInfo.Tpo -c -o TopologyInfo.lo `test -f '$(SRC_MESH_DIR)/TopologyInfo.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/TopologyInfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TopologyInfo.Tpo $(DEPDIR)/TopologyInfo.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/TopologyInfo.cpp' object='TopologyInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TopologyInfo.lo `test -f '$(SRC_MESH_DIR)/TopologyInfo.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/TopologyInfo.cpp

VertexPatches.lo: $(SRC_MESH_DIR)/VertexPatches.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexPatches.lo -MD -MP -MF $(DEPDIR)/VertexPatches.Tpo -c -o VertexPatches.lo `test -f '$(SRC_MESH_DIR)/VertexPatches.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/VertexPatches.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VertexPatches.Tpo $(DEPDIR)/VertexPatches.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/VertexPatches.cpp' object='VertexPatches.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexPatches.lo `test -f '$(SRC_MESH_DIR)/VertexPatches.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/VertexPatches.cpp

ParallelHelperNoMPIStub.lo: $(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParallelHelperNoMPIStub.lo -MD -MP -MF $(DEPDIR)/ParallelHelperNoMPIStub.Tpo -c -o ParallelHelperNoMPIStub.lo `test -f '$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ParallelHelperNoMPIStub.Tpo $(DEPDIR)/ParallelHelperNoMPIStub.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp' object='ParallelHelperNoMPIStub.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParallelHelperNoMPIStub.lo `test -f '$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ParallelHelperNoMPIStub.cpp

ParallelHelper.lo: $(SRC_MESH_DIR)/ParallelHelper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParallelHelper.lo -MD -MP -MF $(DEPDIR)/ParallelHelper.Tpo -c -o ParallelHelper.lo `test -f '$(SRC_MESH_DIR)/ParallelHelper.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ParallelHelper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ParallelHelper.Tpo $(DEPDIR)/ParallelHelper.Plo
#	$(AM_V_CXX)source='$(SRC_MESH_DIR)/ParallelHelper.cpp' object='ParallelHelper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParallelHelper.lo `test -f '$(SRC_MESH_DIR)/ParallelHelper.cpp' || echo '$(srcdir)/'`$(SRC_MESH_DIR)/ParallelHelper.cpp

Instruction.lo: $(SRC_CONTROL_DIR)/Instruction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Instruction.lo -MD -MP -MF $(DEPDIR)/Instruction.Tpo -c -o Instruction.lo `test -f '$(SRC_CONTROL_DIR)/Instruction.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/Instruction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Instruction.Tpo $(DEPDIR)/Instruction.Plo
#	$(AM_V_CXX)source='$(SRC_CONTROL_DIR)/Instruction.cpp' object='Instruction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Instruction.lo `test -f '$(SRC_CONTROL_DIR)/Instruction.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/Instruction.cpp

InstructionQueue.lo: $(SRC_CONTROL_DIR)/InstructionQueue.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InstructionQueue.lo -MD -MP -MF $(DEPDIR)/InstructionQueue.Tpo -c -o InstructionQueue.lo `test -f '$(SRC_CONTROL_DIR)/InstructionQueue.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/InstructionQueue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InstructionQueue.Tpo $(DEPDIR)/InstructionQueue.Plo
#	$(AM_V_CXX)source='$(SRC_CONTROL_DIR)/InstructionQueue.cpp' object='InstructionQueue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InstructionQueue.lo `test -f '$(SRC_CONTROL_DIR)/InstructionQueue.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/InstructionQueue.cpp

IQInterface.lo: $(SRC_CONTROL_DIR)/IQInterface.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IQInterface.lo -MD -MP -MF $(DEPDIR)/IQInterface.Tpo -c -o IQInterface.lo `test -f '$(SRC_CONTROL_DIR)/IQInterface.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/IQInterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/IQInterface.Tpo $(DEPDIR)/IQInterface.Plo
#	$(AM_V_CXX)source='$(SRC_CONTROL_DIR)/IQInterface.cpp' object='IQInterface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IQInterface.lo `test -f '$(SRC_CONTROL_DIR)/IQInterface.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/IQInterface.cpp

TerminationCriterion.lo: $(SRC_CONTROL_DIR)/TerminationCriterion.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TerminationCriterion.lo -MD -MP -MF $(DEPDIR)/TerminationCriterion.Tpo -c -o TerminationCriterion.lo `test -f '$(SRC_CONTROL_DIR)/TerminationCriterion.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/TerminationCriterion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TerminationCriterion.Tpo $(DEPDIR)/TerminationCriterion.Plo
#	$(AM_V_CXX)source='$(SRC_CONTROL_DIR)/TerminationCriterion.cpp' object='TerminationCriterion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TerminationCriterion.lo `test -f '$(SRC_CONTROL_DIR)/TerminationCriterion.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/TerminationCriterion.cpp

Settings.lo: $(SRC_CONTROL_DIR)/Settings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Settings.lo -MD -MP -MF $(DEPDIR)/Settings.Tpo -c -o Settings.lo `test -f '$(SRC_CONTROL_DIR)/Settings.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/Settings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Settings.Tpo $(DEPDIR)/Settings.Plo
#	$(AM_V_CXX)source='$(SRC_CONTROL_DIR)/Settings.cpp' object='Settings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Settings.lo `test -f '$(SRC_CONTROL_DIR)/Settings.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/Settings.cpp

SlaveBoundaryVertices.lo: $(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SlaveBoundaryVertices.lo -MD -MP -MF $(DEPDIR)/SlaveBoundaryVertices.Tpo -c -o SlaveBoundaryVertices.lo `test -f '$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SlaveBoundaryVertices.Tpo $(DEPDIR)/SlaveBoundaryVertices.Plo
#	$(AM_V_CXX)source='$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp' object='SlaveBoundaryVertices.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SlaveBoundaryVertices.lo `test -f '$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp' || echo '$(srcdir)/'`$(SRC_CONTROL_DIR)/SlaveBoundaryVertices.cpp

DeformingDomainWrapper.lo: $(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeformingDomainWrapper.lo -MD -MP -MF $(DEPDIR)/DeformingDomainWrapper.Tpo -c -o DeformingDomainWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DeformingDomainWrapper.Tpo $(DEPDIR)/DeformingDomainWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp' object='DeformingDomainWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeformingDomainWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/DeformingDomainWrapper.cpp

LaplaceWrapper.lo: $(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LaplaceWrapper.lo -MD -MP -MF $(DEPDIR)/LaplaceWrapper.Tpo -c -o LaplaceWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LaplaceWrapper.Tpo $(DEPDIR)/LaplaceWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp' object='LaplaceWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LaplaceWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/LaplaceWrapper.cpp

ShapeImprovementWrapper.lo: $(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ShapeImprovementWrapper.lo -MD -MP -MF $(DEPDIR)/ShapeImprovementWrapper.Tpo -c -o ShapeImprovementWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ShapeImprovementWrapper.Tpo $(DEPDIR)/ShapeImprovementWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp' object='ShapeImprovementWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ShapeImprovementWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/ShapeImprovementWrapper.cpp

ShapeImprover.lo: $(SRC_WRAPPERS_DIR)/ShapeImprover.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ShapeImprover.lo -MD -MP -MF $(DEPDIR)/ShapeImprover.Tpo -c -o ShapeImprover.lo `test -f '$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ShapeImprover.Tpo $(DEPDIR)/ShapeImprover.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp' object='ShapeImprover.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ShapeImprover.lo `test -f '$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/ShapeImprover.cpp

SizeAdaptShapeWrapper.lo: $(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SizeAdaptShapeWrapper.lo -MD -MP -MF $(DEPDIR)/SizeAdaptShapeWrapper.Tpo -c -o SizeAdaptShapeWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SizeAdaptShapeWrapper.Tpo $(DEPDIR)/SizeAdaptShapeWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp' object='SizeAdaptShapeWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SizeAdaptShapeWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/SizeAdaptShapeWrapper.cpp

PaverMinEdgeLengthWrapper.lo: $(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PaverMinEdgeLengthWrapper.lo -MD -MP -MF $(DEPDIR)/PaverMinEdgeLengthWrapper.Tpo -c -o PaverMinEdgeLengthWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PaverMinEdgeLengthWrapper.Tpo $(DEPDIR)/PaverMinEdgeLengthWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp' object='PaverMinEdgeLengthWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PaverMinEdgeLengthWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/PaverMinEdgeLengthWrapper.cpp

UntangleWrapper.lo: $(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UntangleWrapper.lo -MD -MP -MF $(DEPDIR)/UntangleWrapper.Tpo -c -o UntangleWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/UntangleWrapper.Tpo $(DEPDIR)/UntangleWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp' object='UntangleWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UntangleWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/UntangleWrapper.cpp

ViscousCFDTetShapeWrapper.lo: $(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViscousCFDTetShapeWrapper.lo -MD -MP -MF $(DEPDIR)/ViscousCFDTetShapeWrapper.Tpo -c -o ViscousCFDTetShapeWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ViscousCFDTetShapeWrapper.Tpo $(DEPDIR)/ViscousCFDTetShapeWrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp' object='ViscousCFDTetShapeWrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViscousCFDTetShapeWrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/ViscousCFDTetShapeWrapper.cpp

Wrapper.lo: $(SRC_WRAPPERS_DIR)/Wrapper.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Wrapper.lo -MD -MP -MF $(DEPDIR)/Wrapper.Tpo -c -o Wrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/Wrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/Wrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Wrapper.Tpo $(DEPDIR)/Wrapper.Plo
#	$(AM_V_CXX)source='$(SRC_WRAPPERS_DIR)/Wrapper.cpp' object='Wrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Wrapper.lo `test -f '$(SRC_WRAPPERS_DIR)/Wrapper.cpp' || echo '$(srcdir)/'`$(SRC_WRAPPERS_DIR)/Wrapper.cpp

MappingFunction.lo: $(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MappingFunction.lo -MD -MP -MF $(DEPDIR)/MappingFunction.Tpo -c -o MappingFunction.lo `test -f '$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MappingFunction.Tpo $(DEPDIR)/MappingFunction.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp' object='MappingFunction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MappingFunction.lo `test -f '$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_DIR)/MappingFunction.cpp

NodeSet.lo: $(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NodeSet.lo -MD -MP -MF $(DEPDIR)/NodeSet.Tpo -c -o NodeSet.lo `test -f '$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/NodeSet.Tpo $(DEPDIR)/NodeSet.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp' object='NodeSet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NodeSet.lo `test -f '$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_DIR)/NodeSet.cpp

Sample.lo: $(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Sample.lo -MD -MP -MF $(DEPDIR)/Sample.Tpo -c -o Sample.lo `test -f '$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Sample.Tpo $(DEPDIR)/Sample.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp' object='Sample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Sample.lo `test -f '$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_DIR)/Sample.cpp

HexLagrangeShape.lo: $(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HexLagrangeShape.lo -MD -MP -MF $(DEPDIR)/HexLagrangeShape.Tpo -c -o HexLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/HexLagrangeShape.Tpo $(DEPDIR)/HexLagrangeShape.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp' object='HexLagrangeShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HexLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/HexLagrangeShape.cpp

QuadLagrangeShape.lo: $(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QuadLagrangeShape.lo -MD -MP -MF $(DEPDIR)/QuadLagrangeShape.Tpo -c -o QuadLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/QuadLagrangeShape.Tpo $(DEPDIR)/QuadLagrangeShape.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp' object='QuadLagrangeShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QuadLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/QuadLagrangeShape.cpp

TetLagrangeShape.lo: $(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TetLagrangeShape.lo -MD -MP -MF $(DEPDIR)/TetLagrangeShape.Tpo -c -o TetLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TetLagrangeShape.Tpo $(DEPDIR)/TetLagrangeShape.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp' object='TetLagrangeShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TetLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TetLagrangeShape.cpp

TriLagrangeShape.lo: $(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TriLagrangeShape.lo -MD -MP -MF $(DEPDIR)/TriLagrangeShape.Tpo -c -o TriLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TriLagrangeShape.Tpo $(DEPDIR)/TriLagrangeShape.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp' object='TriLagrangeShape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TriLagrangeShape.lo `test -f '$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LAGRANGE_DIR)/TriLagrangeShape.cpp

LinearHexahedron.lo: $(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinearHexahedron.lo -MD -MP -MF $(DEPDIR)/LinearHexahedron.Tpo -c -o LinearHexahedron.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinearHexahedron.Tpo $(DEPDIR)/LinearHexahedron.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp' object='LinearHexahedron.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinearHexahedron.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearHexahedron.cpp

LinearPrism.lo: $(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinearPrism.lo -MD -MP -MF $(DEPDIR)/LinearPrism.Tpo -c -o LinearPrism.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinearPrism.Tpo $(DEPDIR)/LinearPrism.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp' object='LinearPrism.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinearPrism.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPrism.cpp

LinearPyramid.lo: $(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinearPyramid.lo -MD -MP -MF $(DEPDIR)/LinearPyramid.Tpo -c -o LinearPyramid.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinearPyramid.Tpo $(DEPDIR)/LinearPyramid.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp' object='LinearPyramid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinearPyramid.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearPyramid.cpp

LinearQuadrilateral.lo: $(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinearQuadrilateral.lo -MD -MP -MF $(DEPDIR)/LinearQuadrilateral.Tpo -c -o LinearQuadrilateral.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinearQuadrilateral.Tpo $(DEPDIR)/LinearQuadrilateral.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp' object='LinearQuadrilateral.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinearQuadrilateral.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearQuadrilateral.cpp

LinearTetrahedron.lo: $(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinearTetrahedron.lo -MD -MP -MF $(DEPDIR)/LinearTetrahedron.Tpo -c -o LinearTetrahedron.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinearTetrahedron.Tpo $(DEPDIR)/LinearTetrahedron.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp' object='LinearTetrahedron.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinearTetrahedron.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTetrahedron.cpp

LinearTriangle.lo: $(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LinearTriangle.lo -MD -MP -MF $(DEPDIR)/LinearTriangle.Tpo -c -o LinearTriangle.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LinearTriangle.Tpo $(DEPDIR)/LinearTriangle.Plo
#	$(AM_V_CXX)source='$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp' object='LinearTriangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LinearTriangle.lo `test -f '$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp' || echo '$(srcdir)/'`$(SRC_MAPPINGFUNCTION_LINEAR_DIR)/LinearTriangle.cpp

BoundedCylinderDomain.lo: $(SRC_MISC_DIR)/BoundedCylinderDomain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BoundedCylinderDomain.lo -MD -MP -MF $(DEPDIR)/BoundedCylinderDomain.Tpo -c -o BoundedCylinderDomain.lo `test -f '$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/BoundedCylinderDomain.Tpo $(DEPDIR)/BoundedCylinderDomain.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp' object='BoundedCylinderDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BoundedCylinderDomain.lo `test -f '$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/BoundedCylinderDomain.cpp

ConicDomain.lo: $(SRC_MISC_DIR)/ConicDomain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConicDomain.lo -MD -MP -MF $(DEPDIR)/ConicDomain.Tpo -c -o ConicDomain.lo `test -f '$(SRC_MISC_DIR)/ConicDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/ConicDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ConicDomain.Tpo $(DEPDIR)/ConicDomain.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/ConicDomain.cpp' object='ConicDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConicDomain.lo `test -f '$(SRC_MISC_DIR)/ConicDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/ConicDomain.cpp

CylinderDomain.lo: $(SRC_MISC_DIR)/CylinderDomain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CylinderDomain.lo -MD -MP -MF $(DEPDIR)/CylinderDomain.Tpo -c -o CylinderDomain.lo `test -f '$(SRC_MISC_DIR)/CylinderDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/CylinderDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CylinderDomain.Tpo $(DEPDIR)/CylinderDomain.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/CylinderDomain.cpp' object='CylinderDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CylinderDomain.lo `test -f '$(SRC_MISC_DIR)/CylinderDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/CylinderDomain.cpp

DomainClassifier.lo: $(SRC_MISC_DIR)/DomainClassifier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DomainClassifier.lo -MD -MP -MF $(DEPDIR)/DomainClassifier.Tpo -c -o DomainClassifier.lo `test -f '$(SRC_MISC_DIR)/DomainClassifier.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/DomainClassifier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DomainClassifier.Tpo $(DEPDIR)/DomainClassifier.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/DomainClassifier.cpp' object='DomainClassifier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DomainClassifier.lo `test -f '$(SRC_MISC_DIR)/DomainClassifier.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/DomainClassifier.cpp

DomainUtil.lo: $(SRC_MISC_DIR)/DomainUtil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DomainUtil.lo -MD -MP -MF $(DEPDIR)/DomainUtil.Tpo -c -o DomainUtil.lo `test -f '$(SRC_MISC_DIR)/DomainUtil.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/DomainUtil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DomainUtil.Tpo $(DEPDIR)/DomainUtil.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/DomainUtil.cpp' object='DomainUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DomainUtil.lo `test -f '$(SRC_MISC_DIR)/DomainUtil.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/DomainUtil.cpp

EdgeIterator.lo: $(SRC_MISC_DIR)/EdgeIterator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EdgeIterator.lo -MD -MP -MF $(DEPDIR)/EdgeIterator.Tpo -c -o EdgeIterator.lo `test -f '$(SRC_MISC_DIR)/EdgeIterator.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/EdgeIterator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EdgeIterator.Tpo $(DEPDIR)/EdgeIterator.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/EdgeIterator.cpp' object='EdgeIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EdgeIterator.lo `test -f '$(SRC_MISC_DIR)/EdgeIterator.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/EdgeIterator.cpp

Exponent.lo: $(SRC_MISC_DIR)/Exponent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Exponent.lo -MD -MP -MF $(DEPDIR)/Exponent.Tpo -c -o Exponent.lo `test -f '$(SRC_MISC_DIR)/Exponent.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/Exponent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Exponent.Tpo $(DEPDIR)/Exponent.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/Exponent.cpp' object='Exponent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Exponent.lo `test -f '$(SRC_MISC_DIR)/Exponent.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/Exponent.cpp

FileTokenizer.lo: $(SRC_MISC_DIR)/FileTokenizer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileTokenizer.lo -MD -MP -MF $(DEPDIR)/FileTokenizer.Tpo -c -o FileTokenizer.lo `test -f '$(SRC_MISC_DIR)/FileTokenizer.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/FileTokenizer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/FileTokenizer.Tpo $(DEPDIR)/FileTokenizer.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/FileTokenizer.cpp' object='FileTokenizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileTokenizer.lo `test -f '$(SRC_MISC_DIR)/FileTokenizer.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/FileTokenizer.cpp

MeshDomain1D.lo: $(SRC_MISC_DIR)/MeshDomain1D.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshDomain1D.lo -MD -MP -MF $(DEPDIR)/MeshDomain1D.Tpo -c -o MeshDomain1D.lo `test -f '$(SRC_MISC_DIR)/MeshDomain1D.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MeshDomain1D.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshDomain1D.Tpo $(DEPDIR)/MeshDomain1D.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MeshDomain1D.cpp' object='MeshDomain1D.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshDomain1D.lo `test -f '$(SRC_MISC_DIR)/MeshDomain1D.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MeshDomain1D.cpp

MeshTransform.lo: $(SRC_MISC_DIR)/MeshTransform.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MeshTransform.lo -MD -MP -MF $(DEPDIR)/MeshTransform.Tpo -c -o MeshTransform.lo `test -f '$(SRC_MISC_DIR)/MeshTransform.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MeshTransform.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MeshTransform.Tpo $(DEPDIR)/MeshTransform.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MeshTransform.cpp' object='MeshTransform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MeshTransform.lo `test -f '$(SRC_MISC_DIR)/MeshTransform.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MeshTransform.cpp

MesquiteVersion.lo: $(SRC_MISC_DIR)/MesquiteVersion.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MesquiteVersion.lo -MD -MP -MF $(DEPDIR)/MesquiteVersion.Tpo -c -o MesquiteVersion.lo `test -f '$(SRC_MISC_DIR)/MesquiteVersion.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MesquiteVersion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MesquiteVersion.Tpo $(DEPDIR)/MesquiteVersion.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MesquiteVersion.cpp' object='MesquiteVersion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MesquiteVersion.lo `test -f '$(SRC_MISC_DIR)/MesquiteVersion.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MesquiteVersion.cpp

MsqDebug.lo: $(SRC_MISC_DIR)/MsqDebug.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqDebug.lo -MD -MP -MF $(DEPDIR)/MsqDebug.Tpo -c -o MsqDebug.lo `test -f '$(SRC_MISC_DIR)/MsqDebug.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqDebug.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqDebug.Tpo $(DEPDIR)/MsqDebug.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqDebug.cpp' object='MsqDebug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqDebug.lo `test -f '$(SRC_MISC_DIR)/MsqDebug.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqDebug.cpp

MsqError.lo: $(SRC_MISC_DIR)/MsqError.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqError.lo -MD -MP -MF $(DEPDIR)/MsqError.Tpo -c -o MsqError.lo `test -f '$(SRC_MISC_DIR)/MsqError.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqError.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqError.Tpo $(DEPDIR)/MsqError.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqError.cpp' object='MsqError.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqError.lo `test -f '$(SRC_MISC_DIR)/MsqError.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqError.cpp

MsqFPE.lo: $(SRC_MISC_DIR)/MsqFPE.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqFPE.lo -MD -MP -MF $(DEPDIR)/MsqFPE.Tpo -c -o MsqFPE.lo `test -f '$(SRC_MISC_DIR)/MsqFPE.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqFPE.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqFPE.Tpo $(DEPDIR)/MsqFPE.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqFPE.cpp' object='MsqFPE.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqFPE.lo `test -f '$(SRC_MISC_DIR)/MsqFPE.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqFPE.cpp

MsqGeomPrim.lo: $(SRC_MISC_DIR)/MsqGeomPrim.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqGeomPrim.lo -MD -MP -MF $(DEPDIR)/MsqGeomPrim.Tpo -c -o MsqGeomPrim.lo `test -f '$(SRC_MISC_DIR)/MsqGeomPrim.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqGeomPrim.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqGeomPrim.Tpo $(DEPDIR)/MsqGeomPrim.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqGeomPrim.cpp' object='MsqGeomPrim.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqGeomPrim.lo `test -f '$(SRC_MISC_DIR)/MsqGeomPrim.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqGeomPrim.cpp

MsqHessian.lo: $(SRC_MISC_DIR)/MsqHessian.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqHessian.lo -MD -MP -MF $(DEPDIR)/MsqHessian.Tpo -c -o MsqHessian.lo `test -f '$(SRC_MISC_DIR)/MsqHessian.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqHessian.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqHessian.Tpo $(DEPDIR)/MsqHessian.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqHessian.cpp' object='MsqHessian.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqHessian.lo `test -f '$(SRC_MISC_DIR)/MsqHessian.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqHessian.cpp

MsqInterrupt.lo: $(SRC_MISC_DIR)/MsqInterrupt.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqInterrupt.lo -MD -MP -MF $(DEPDIR)/MsqInterrupt.Tpo -c -o MsqInterrupt.lo `test -f '$(SRC_MISC_DIR)/MsqInterrupt.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqInterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqInterrupt.Tpo $(DEPDIR)/MsqInterrupt.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqInterrupt.cpp' object='MsqInterrupt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqInterrupt.lo `test -f '$(SRC_MISC_DIR)/MsqInterrupt.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqInterrupt.cpp

MsqTimer.lo: $(SRC_MISC_DIR)/MsqTimer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqTimer.lo -MD -MP -MF $(DEPDIR)/MsqTimer.Tpo -c -o MsqTimer.lo `test -f '$(SRC_MISC_DIR)/MsqTimer.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqTimer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqTimer.Tpo $(DEPDIR)/MsqTimer.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqTimer.cpp' object='MsqTimer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqTimer.lo `test -f '$(SRC_MISC_DIR)/MsqTimer.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqTimer.cpp

PlanarDomain.lo: $(SRC_MISC_DIR)/PlanarDomain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PlanarDomain.lo -MD -MP -MF $(DEPDIR)/PlanarDomain.Tpo -c -o PlanarDomain.lo `test -f '$(SRC_MISC_DIR)/PlanarDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/PlanarDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PlanarDomain.Tpo $(DEPDIR)/PlanarDomain.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/PlanarDomain.cpp' object='PlanarDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PlanarDomain.lo `test -f '$(SRC_MISC_DIR)/PlanarDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/PlanarDomain.cpp

SimpleStats.lo: $(SRC_MISC_DIR)/SimpleStats.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleStats.lo -MD -MP -MF $(DEPDIR)/SimpleStats.Tpo -c -o SimpleStats.lo `test -f '$(SRC_MISC_DIR)/SimpleStats.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/SimpleStats.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SimpleStats.Tpo $(DEPDIR)/SimpleStats.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/SimpleStats.cpp' object='SimpleStats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleStats.lo `test -f '$(SRC_MISC_DIR)/SimpleStats.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/SimpleStats.cpp

SphericalDomain.lo: $(SRC_MISC_DIR)/SphericalDomain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SphericalDomain.lo -MD -MP -MF $(DEPDIR)/SphericalDomain.Tpo -c -o SphericalDomain.lo `test -f '$(SRC_MISC_DIR)/SphericalDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/SphericalDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SphericalDomain.Tpo $(DEPDIR)/SphericalDomain.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/SphericalDomain.cpp' object='SphericalDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SphericalDomain.lo `test -f '$(SRC_MISC_DIR)/SphericalDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/SphericalDomain.cpp

Vector3D.lo: $(SRC_MISC_DIR)/Vector3D.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vector3D.lo -MD -MP -MF $(DEPDIR)/Vector3D.Tpo -c -o Vector3D.lo `test -f '$(SRC_MISC_DIR)/Vector3D.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/Vector3D.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Vector3D.Tpo $(DEPDIR)/Vector3D.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/Vector3D.cpp' object='Vector3D.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector3D.lo `test -f '$(SRC_MISC_DIR)/Vector3D.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/Vector3D.cpp

VtkTypeInfo.lo: $(SRC_MISC_DIR)/VtkTypeInfo.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VtkTypeInfo.lo -MD -MP -MF $(DEPDIR)/VtkTypeInfo.Tpo -c -o VtkTypeInfo.lo `test -f '$(SRC_MISC_DIR)/VtkTypeInfo.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/VtkTypeInfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VtkTypeInfo.Tpo $(DEPDIR)/VtkTypeInfo.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/VtkTypeInfo.cpp' object='VtkTypeInfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VtkTypeInfo.lo `test -f '$(SRC_MISC_DIR)/VtkTypeInfo.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/VtkTypeInfo.cpp

XYPlanarDomain.lo: $(SRC_MISC_DIR)/XYPlanarDomain.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XYPlanarDomain.lo -MD -MP -MF $(DEPDIR)/XYPlanarDomain.Tpo -c -o XYPlanarDomain.lo `test -f '$(SRC_MISC_DIR)/XYPlanarDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/XYPlanarDomain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/XYPlanarDomain.Tpo $(DEPDIR)/XYPlanarDomain.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/XYPlanarDomain.cpp' object='XYPlanarDomain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XYPlanarDomain.lo `test -f '$(SRC_MISC_DIR)/XYPlanarDomain.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/XYPlanarDomain.cpp

XYRectangle.lo: $(SRC_MISC_DIR)/XYRectangle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XYRectangle.lo -MD -MP -MF $(DEPDIR)/XYRectangle.Tpo -c -o XYRectangle.lo `test -f '$(SRC_MISC_DIR)/XYRectangle.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/XYRectangle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/XYRectangle.Tpo $(DEPDIR)/XYRectangle.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/XYRectangle.cpp' object='XYRectangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XYRectangle.lo `test -f '$(SRC_MISC_DIR)/XYRectangle.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/XYRectangle.cpp

MsqIBase.lo: $(SRC_MISC_DIR)/MsqIBase.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MsqIBase.lo -MD -MP -MF $(DEPDIR)/MsqIBase.Tpo -c -o MsqIBase.lo `test -f '$(SRC_MISC_DIR)/MsqIBase.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqIBase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MsqIBase.Tpo $(DEPDIR)/MsqIBase.Plo
#	$(AM_V_CXX)source='$(SRC_MISC_DIR)/MsqIBase.cpp' object='MsqIBase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MsqIBase.lo `test -f '$(SRC_MISC_DIR)/MsqIBase.cpp' || echo '$(srcdir)/'`$(SRC_MISC_DIR)/MsqIBase.cpp

CompositeOFAdd.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompositeOFAdd.lo -MD -MP -MF $(DEPDIR)/CompositeOFAdd.Tpo -c -o CompositeOFAdd.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CompositeOFAdd.Tpo $(DEPDIR)/CompositeOFAdd.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp' object='CompositeOFAdd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompositeOFAdd.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFAdd.cpp

CompositeOFMultiply.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompositeOFMultiply.lo -MD -MP -MF $(DEPDIR)/CompositeOFMultiply.Tpo -c -o CompositeOFMultiply.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CompositeOFMultiply.Tpo $(DEPDIR)/CompositeOFMultiply.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp' object='CompositeOFMultiply.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompositeOFMultiply.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFMultiply.cpp

CompositeOFScalarAdd.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompositeOFScalarAdd.lo -MD -MP -MF $(DEPDIR)/CompositeOFScalarAdd.Tpo -c -o CompositeOFScalarAdd.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CompositeOFScalarAdd.Tpo $(DEPDIR)/CompositeOFScalarAdd.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp' object='CompositeOFScalarAdd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompositeOFScalarAdd.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarAdd.cpp

CompositeOFScalarMultiply.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompositeOFScalarMultiply.lo -MD -MP -MF $(DEPDIR)/CompositeOFScalarMultiply.Tpo -c -o CompositeOFScalarMultiply.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CompositeOFScalarMultiply.Tpo $(DEPDIR)/CompositeOFScalarMultiply.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp' object='CompositeOFScalarMultiply.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompositeOFScalarMultiply.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/CompositeOFScalarMultiply.cpp

LInfTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LInfTemplate.lo -MD -MP -MF $(DEPDIR)/LInfTemplate.Tpo -c -o LInfTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LInfTemplate.Tpo $(DEPDIR)/LInfTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp' object='LInfTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LInfTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/LInfTemplate.cpp

LPtoPTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LPtoPTemplate.lo -MD -MP -MF $(DEPDIR)/LPtoPTemplate.Tpo -c -o LPtoPTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LPtoPTemplate.Tpo $(DEPDIR)/LPtoPTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp' object='LPtoPTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LPtoPTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/LPtoPTemplate.cpp

MaxTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MaxTemplate.lo -MD -MP -MF $(DEPDIR)/MaxTemplate.Tpo -c -o MaxTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MaxTemplate.Tpo $(DEPDIR)/MaxTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp' object='MaxTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MaxTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/MaxTemplate.cpp

OFEvaluator.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OFEvaluator.lo -MD -MP -MF $(DEPDIR)/OFEvaluator.Tpo -c -o OFEvaluator.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/OFEvaluator.Tpo $(DEPDIR)/OFEvaluator.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp' object='OFEvaluator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OFEvaluator.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/OFEvaluator.cpp

ObjectiveFunction.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ObjectiveFunction.lo -MD -MP -MF $(DEPDIR)/ObjectiveFunction.Tpo -c -o ObjectiveFunction.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ObjectiveFunction.Tpo $(DEPDIR)/ObjectiveFunction.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp' object='ObjectiveFunction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ObjectiveFunction.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunction.cpp

ObjectiveFunctionTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ObjectiveFunctionTemplate.lo -MD -MP -MF $(DEPDIR)/ObjectiveFunctionTemplate.Tpo -c -o ObjectiveFunctionTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ObjectiveFunctionTemplate.Tpo $(DEPDIR)/ObjectiveFunctionTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp' object='ObjectiveFunctionTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ObjectiveFunctionTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/ObjectiveFunctionTemplate.cpp

PatchPowerMeanP.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatchPowerMeanP.lo -MD -MP -MF $(DEPDIR)/PatchPowerMeanP.Tpo -c -o PatchPowerMeanP.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PatchPowerMeanP.Tpo $(DEPDIR)/PatchPowerMeanP.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp' object='PatchPowerMeanP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatchPowerMeanP.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/PatchPowerMeanP.cpp

PMeanPTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PMeanPTemplate.lo -MD -MP -MF $(DEPDIR)/PMeanPTemplate.Tpo -c -o PMeanPTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PMeanPTemplate.Tpo $(DEPDIR)/PMeanPTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp' object='PMeanPTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PMeanPTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/PMeanPTemplate.cpp

StdDevTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StdDevTemplate.lo -MD -MP -MF $(DEPDIR)/StdDevTemplate.Tpo -c -o StdDevTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/StdDevTemplate.Tpo $(DEPDIR)/StdDevTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp' object='StdDevTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdDevTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/StdDevTemplate.cpp

VarianceTemplate.lo: $(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VarianceTemplate.lo -MD -MP -MF $(DEPDIR)/VarianceTemplate.Tpo -c -o VarianceTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VarianceTemplate.Tpo $(DEPDIR)/VarianceTemplate.Plo
#	$(AM_V_CXX)source='$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp' object='VarianceTemplate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VarianceTemplate.lo `test -f '$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp' || echo '$(srcdir)/'`$(SRC_OBJECTIVEFUNCTION_DIR)/VarianceTemplate.cpp

QualityAssessor.lo: $(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QualityAssessor.lo -MD -MP -MF $(DEPDIR)/QualityAssessor.Tpo -c -o QualityAssessor.lo `test -f '$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/QualityAssessor.Tpo $(DEPDIR)/QualityAssessor.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp' object='QualityAssessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QualityAssessor.lo `test -f '$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYASSESSOR_DIR)/QualityAssessor.cpp

PatchSetUser.lo: $(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatchSetUser.lo -MD -MP -MF $(DEPDIR)/PatchSetUser.Tpo -c -o PatchSetUser.lo `test -f '$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PatchSetUser.Tpo $(DEPDIR)/PatchSetUser.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp' object='PatchSetUser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatchSetUser.lo `test -f '$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYIMPROVER_DIR)/PatchSetUser.cpp

QualityImprover.lo: $(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QualityImprover.lo -MD -MP -MF $(DEPDIR)/QualityImprover.Tpo -c -o QualityImprover.lo `test -f '$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/QualityImprover.Tpo $(DEPDIR)/QualityImprover.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp' object='QualityImprover.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QualityImprover.lo `test -f '$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYIMPROVER_DIR)/QualityImprover.cpp

VertexMover.lo: $(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexMover.lo -MD -MP -MF $(DEPDIR)/VertexMover.Tpo -c -o VertexMover.lo `test -f '$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VertexMover.Tpo $(DEPDIR)/VertexMover.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp' object='VertexMover.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexMover.lo `test -f '$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYIMPROVER_DIR)/VertexMover.cpp

ConjugateGradient.lo: $(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConjugateGradient.lo -MD -MP -MF $(DEPDIR)/ConjugateGradient.Tpo -c -o ConjugateGradient.lo `test -f '$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ConjugateGradient.Tpo $(DEPDIR)/ConjugateGradient.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp' object='ConjugateGradient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConjugateGradient.lo `test -f '$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/ConjugateGradient.cpp

FeasibleNewton.lo: $(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FeasibleNewton.lo -MD -MP -MF $(DEPDIR)/FeasibleNewton.Tpo -c -o FeasibleNewton.lo `test -f '$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/FeasibleNewton.Tpo $(DEPDIR)/FeasibleNewton.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp' object='FeasibleNewton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FeasibleNewton.lo `test -f '$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/FeasibleNewton.cpp

NonSmoothDescent.lo: $(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NonSmoothDescent.lo -MD -MP -MF $(DEPDIR)/NonSmoothDescent.Tpo -c -o NonSmoothDescent.lo `test -f '$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/NonSmoothDescent.Tpo $(DEPDIR)/NonSmoothDescent.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp' object='NonSmoothDescent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NonSmoothDescent.lo `test -f '$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/NonSmoothDescent.cpp

QuasiNewton.lo: $(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QuasiNewton.lo -MD -MP -MF $(DEPDIR)/QuasiNewton.Tpo -c -o QuasiNewton.lo `test -f '$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/QuasiNewton.Tpo $(DEPDIR)/QuasiNewton.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp' object='QuasiNewton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QuasiNewton.lo `test -f '$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/QuasiNewton.cpp

SteepestDescent.lo: $(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SteepestDescent.lo -MD -MP -MF $(DEPDIR)/SteepestDescent.Tpo -c -o SteepestDescent.lo `test -f '$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SteepestDescent.Tpo $(DEPDIR)/SteepestDescent.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp' object='SteepestDescent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SteepestDescent.lo `test -f '$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/SteepestDescent.cpp

NonGradient.lo: $(SRC_OPTSOLVER_DIR)/NonGradient.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NonGradient.lo -MD -MP -MF $(DEPDIR)/NonGradient.Tpo -c -o NonGradient.lo `test -f '$(SRC_OPTSOLVER_DIR)/NonGradient.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/NonGradient.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/NonGradient.Tpo $(DEPDIR)/NonGradient.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/NonGradient.cpp' object='NonGradient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NonGradient.lo `test -f '$(SRC_OPTSOLVER_DIR)/NonGradient.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/NonGradient.cpp

TrustRegion.lo: $(SRC_OPTSOLVER_DIR)/TrustRegion.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TrustRegion.lo -MD -MP -MF $(DEPDIR)/TrustRegion.Tpo -c -o TrustRegion.lo `test -f '$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TrustRegion.Tpo $(DEPDIR)/TrustRegion.Plo
#	$(AM_V_CXX)source='$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp' object='TrustRegion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrustRegion.lo `test -f '$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp' || echo '$(srcdir)/'`$(SRC_OPTSOLVER_DIR)/TrustRegion.cpp

Randomize.lo: $(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Randomize.lo -MD -MP -MF $(DEPDIR)/Randomize.Tpo -c -o Randomize.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Randomize.Tpo $(DEPDIR)/Randomize.Plo
#	$(AM_V_CXX)source='$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp' object='Randomize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Randomize.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/Randomize.cpp

RelaxationSmoother.lo: $(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RelaxationSmoother.lo -MD -MP -MF $(DEPDIR)/RelaxationSmoother.Tpo -c -o RelaxationSmoother.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RelaxationSmoother.Tpo $(DEPDIR)/RelaxationSmoother.Plo
#	$(AM_V_CXX)source='$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp' object='RelaxationSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RelaxationSmoother.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/RelaxationSmoother.cpp

LaplacianSmoother.lo: $(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LaplacianSmoother.lo -MD -MP -MF $(DEPDIR)/LaplacianSmoother.Tpo -c -o LaplacianSmoother.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LaplacianSmoother.Tpo $(DEPDIR)/LaplacianSmoother.Plo
#	$(AM_V_CXX)source='$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp' object='LaplacianSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LaplacianSmoother.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/LaplacianSmoother.cpp

SmartLaplacianSmoother.lo: $(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SmartLaplacianSmoother.lo -MD -MP -MF $(DEPDIR)/SmartLaplacianSmoother.Tpo -c -o SmartLaplacianSmoother.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SmartLaplacianSmoother.Tpo $(DEPDIR)/SmartLaplacianSmoother.Plo
#	$(AM_V_CXX)source='$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp' object='SmartLaplacianSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SmartLaplacianSmoother.lo `test -f '$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp' || echo '$(srcdir)/'`$(SRC_RELAXATIONSMOOTHERS_DIR)/SmartLaplacianSmoother.cpp

CompareQM.lo: $(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CompareQM.lo -MD -MP -MF $(DEPDIR)/CompareQM.Tpo -c -o CompareQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CompareQM.Tpo $(DEPDIR)/CompareQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp' object='CompareQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CompareQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/Debug/CompareQM.cpp

NumericalQM.lo: $(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NumericalQM.lo -MD -MP -MF $(DEPDIR)/NumericalQM.Tpo -c -o NumericalQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/NumericalQM.Tpo $(DEPDIR)/NumericalQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp' object='NumericalQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NumericalQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/Debug/NumericalQM.cpp

AddQualityMetric.lo: $(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AddQualityMetric.lo -MD -MP -MF $(DEPDIR)/AddQualityMetric.Tpo -c -o AddQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AddQualityMetric.Tpo $(DEPDIR)/AddQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp' object='AddQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AddQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/AddQualityMetric.cpp

AveragingQM.lo: $(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AveragingQM.lo -MD -MP -MF $(DEPDIR)/AveragingQM.Tpo -c -o AveragingQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AveragingQM.Tpo $(DEPDIR)/AveragingQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp' object='AveragingQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AveragingQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/AveragingQM.cpp

EdgeQM.lo: $(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EdgeQM.lo -MD -MP -MF $(DEPDIR)/EdgeQM.Tpo -c -o EdgeQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EdgeQM.Tpo $(DEPDIR)/EdgeQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp' object='EdgeQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EdgeQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/EdgeQM.cpp

ElemSampleQM.lo: $(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElemSampleQM.lo -MD -MP -MF $(DEPDIR)/ElemSampleQM.Tpo -c -o ElemSampleQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ElemSampleQM.Tpo $(DEPDIR)/ElemSampleQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp' object='ElemSampleQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElemSampleQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElemSampleQM.cpp

ElementMaxQM.lo: $(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElementMaxQM.lo -MD -MP -MF $(DEPDIR)/ElementMaxQM.Tpo -c -o ElementMaxQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ElementMaxQM.Tpo $(DEPDIR)/ElementMaxQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp' object='ElementMaxQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElementMaxQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementMaxQM.cpp

ElementAvgQM.lo: $(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElementAvgQM.lo -MD -MP -MF $(DEPDIR)/ElementAvgQM.Tpo -c -o ElementAvgQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ElementAvgQM.Tpo $(DEPDIR)/ElementAvgQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp' object='ElementAvgQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElementAvgQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementAvgQM.cpp

ElementPMeanP.lo: $(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElementPMeanP.lo -MD -MP -MF $(DEPDIR)/ElementPMeanP.Tpo -c -o ElementPMeanP.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ElementPMeanP.Tpo $(DEPDIR)/ElementPMeanP.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp' object='ElementPMeanP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElementPMeanP.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementPMeanP.cpp

ElementQM.lo: $(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ElementQM.lo -MD -MP -MF $(DEPDIR)/ElementQM.Tpo -c -o ElementQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ElementQM.Tpo $(DEPDIR)/ElementQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp' object='ElementQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElementQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ElementQM.cpp

MultiplyQualityMetric.lo: $(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MultiplyQualityMetric.lo -MD -MP -MF $(DEPDIR)/MultiplyQualityMetric.Tpo -c -o MultiplyQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MultiplyQualityMetric.Tpo $(DEPDIR)/MultiplyQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp' object='MultiplyQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiplyQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/MultiplyQualityMetric.cpp

PMeanPMetric.lo: $(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PMeanPMetric.lo -MD -MP -MF $(DEPDIR)/PMeanPMetric.Tpo -c -o PMeanPMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PMeanPMetric.Tpo $(DEPDIR)/PMeanPMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp' object='PMeanPMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PMeanPMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/PMeanPMetric.cpp

PowerQualityMetric.lo: $(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PowerQualityMetric.lo -MD -MP -MF $(DEPDIR)/PowerQualityMetric.Tpo -c -o PowerQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/PowerQualityMetric.Tpo $(DEPDIR)/PowerQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp' object='PowerQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PowerQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/PowerQualityMetric.cpp

QualityMetric.lo: $(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT QualityMetric.lo -MD -MP -MF $(DEPDIR)/QualityMetric.Tpo -c -o QualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/QualityMetric.Tpo $(DEPDIR)/QualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp' object='QualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/QualityMetric.cpp

ScalarAddQualityMetric.lo: $(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScalarAddQualityMetric.lo -MD -MP -MF $(DEPDIR)/ScalarAddQualityMetric.Tpo -c -o ScalarAddQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ScalarAddQualityMetric.Tpo $(DEPDIR)/ScalarAddQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp' object='ScalarAddQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarAddQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ScalarAddQualityMetric.cpp

ScalarMultiplyQualityMetric.lo: $(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScalarMultiplyQualityMetric.lo -MD -MP -MF $(DEPDIR)/ScalarMultiplyQualityMetric.Tpo -c -o ScalarMultiplyQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ScalarMultiplyQualityMetric.Tpo $(DEPDIR)/ScalarMultiplyQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp' object='ScalarMultiplyQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarMultiplyQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/ScalarMultiplyQualityMetric.cpp

VertexMaxQM.lo: $(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexMaxQM.lo -MD -MP -MF $(DEPDIR)/VertexMaxQM.Tpo -c -o VertexMaxQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VertexMaxQM.Tpo $(DEPDIR)/VertexMaxQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp' object='VertexMaxQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexMaxQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/VertexMaxQM.cpp

VertexPMeanP.lo: $(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexPMeanP.lo -MD -MP -MF $(DEPDIR)/VertexPMeanP.Tpo -c -o VertexPMeanP.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VertexPMeanP.Tpo $(DEPDIR)/VertexPMeanP.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp' object='VertexPMeanP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexPMeanP.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/VertexPMeanP.cpp

VertexQM.lo: $(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexQM.lo -MD -MP -MF $(DEPDIR)/VertexQM.Tpo -c -o VertexQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VertexQM.Tpo $(DEPDIR)/VertexQM.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp' object='VertexQM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexQM.lo `test -f '$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_DIR)/VertexQM.cpp

AspectRatioGammaQualityMetric.lo: $(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AspectRatioGammaQualityMetric.lo -MD -MP -MF $(DEPDIR)/AspectRatioGammaQualityMetric.Tpo -c -o AspectRatioGammaQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AspectRatioGammaQualityMetric.Tpo $(DEPDIR)/AspectRatioGammaQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp' object='AspectRatioGammaQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AspectRatioGammaQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/AspectRatioGammaQualityMetric.cpp

ConditionNumberQualityMetric.lo: $(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConditionNumberQualityMetric.lo -MD -MP -MF $(DEPDIR)/ConditionNumberQualityMetric.Tpo -c -o ConditionNumberQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ConditionNumberQualityMetric.Tpo $(DEPDIR)/ConditionNumberQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp' object='ConditionNumberQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConditionNumberQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/ConditionNumberQualityMetric.cpp

IdealWeightInverseMeanRatio.lo: $(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IdealWeightInverseMeanRatio.lo -MD -MP -MF $(DEPDIR)/IdealWeightInverseMeanRatio.Tpo -c -o IdealWeightInverseMeanRatio.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/IdealWeightInverseMeanRatio.Tpo $(DEPDIR)/IdealWeightInverseMeanRatio.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp' object='IdealWeightInverseMeanRatio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IdealWeightInverseMeanRatio.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightInverseMeanRatio.cpp

IdealWeightMeanRatio.lo: $(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IdealWeightMeanRatio.lo -MD -MP -MF $(DEPDIR)/IdealWeightMeanRatio.Tpo -c -o IdealWeightMeanRatio.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/IdealWeightMeanRatio.Tpo $(DEPDIR)/IdealWeightMeanRatio.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp' object='IdealWeightMeanRatio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IdealWeightMeanRatio.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/IdealWeightMeanRatio.cpp

VertexConditionNumberQualityMetric.lo: $(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VertexConditionNumberQualityMetric.lo -MD -MP -MF $(DEPDIR)/VertexConditionNumberQualityMetric.Tpo -c -o VertexConditionNumberQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/VertexConditionNumberQualityMetric.Tpo $(DEPDIR)/VertexConditionNumberQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp' object='VertexConditionNumberQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VertexConditionNumberQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SHAPE_DIR)/VertexConditionNumberQualityMetric.cpp

EdgeLengthQualityMetric.lo: $(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EdgeLengthQualityMetric.lo -MD -MP -MF $(DEPDIR)/EdgeLengthQualityMetric.Tpo -c -o EdgeLengthQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EdgeLengthQualityMetric.Tpo $(DEPDIR)/EdgeLengthQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp' object='EdgeLengthQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EdgeLengthQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthQualityMetric.cpp

EdgeLengthRangeQualityMetric.lo: $(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EdgeLengthRangeQualityMetric.lo -MD -MP -MF $(DEPDIR)/EdgeLengthRangeQualityMetric.Tpo -c -o EdgeLengthRangeQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EdgeLengthRangeQualityMetric.Tpo $(DEPDIR)/EdgeLengthRangeQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp' object='EdgeLengthRangeQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EdgeLengthRangeQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_SMOOTHNESS_DIR)/EdgeLengthRangeQualityMetric.cpp

AffineMapMetric.lo: $(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AffineMapMetric.lo -MD -MP -MF $(DEPDIR)/AffineMapMetric.Tpo -c -o AffineMapMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AffineMapMetric.Tpo $(DEPDIR)/AffineMapMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp' object='AffineMapMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AffineMapMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/AffineMapMetric.cpp

TargetMetricUtil.lo: $(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TargetMetricUtil.lo -MD -MP -MF $(DEPDIR)/TargetMetricUtil.Tpo -c -o TargetMetricUtil.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TargetMetricUtil.Tpo $(DEPDIR)/TargetMetricUtil.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp' object='TargetMetricUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TargetMetricUtil.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/TargetMetricUtil.cpp

AWQualityMetric.lo: $(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWQualityMetric.lo -MD -MP -MF $(DEPDIR)/AWQualityMetric.Tpo -c -o AWQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWQualityMetric.Tpo $(DEPDIR)/AWQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp' object='AWQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/AWQualityMetric.cpp

TQualityMetric.lo: $(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TQualityMetric.lo -MD -MP -MF $(DEPDIR)/TQualityMetric.Tpo -c -o TQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TQualityMetric.Tpo $(DEPDIR)/TQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp' object='TQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/TQualityMetric.cpp

TMPQualityMetric.lo: $(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TMPQualityMetric.lo -MD -MP -MF $(DEPDIR)/TMPQualityMetric.Tpo -c -o TMPQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TMPQualityMetric.Tpo $(DEPDIR)/TMPQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp' object='TMPQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TMPQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_TMP_DIR)/TMPQualityMetric.cpp

UntangleBetaQualityMetric.lo: $(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UntangleBetaQualityMetric.lo -MD -MP -MF $(DEPDIR)/UntangleBetaQualityMetric.Tpo -c -o UntangleBetaQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/UntangleBetaQualityMetric.Tpo $(DEPDIR)/UntangleBetaQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp' object='UntangleBetaQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UntangleBetaQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_UNTANGLE_DIR)/UntangleBetaQualityMetric.cpp

EdgeLengthMetric.lo: $(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EdgeLengthMetric.lo -MD -MP -MF $(DEPDIR)/EdgeLengthMetric.Tpo -c -o EdgeLengthMetric.lo `test -f '$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EdgeLengthMetric.Tpo $(DEPDIR)/EdgeLengthMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp' object='EdgeLengthMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EdgeLengthMetric.lo `test -f '$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_VOLUME_DIR)/EdgeLengthMetric.cpp

LocalSizeQualityMetric.lo: $(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LocalSizeQualityMetric.lo -MD -MP -MF $(DEPDIR)/LocalSizeQualityMetric.Tpo -c -o LocalSizeQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LocalSizeQualityMetric.Tpo $(DEPDIR)/LocalSizeQualityMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp' object='LocalSizeQualityMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalSizeQualityMetric.lo `test -f '$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_VOLUME_DIR)/LocalSizeQualityMetric.cpp

SizeMetric.lo: $(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SizeMetric.lo -MD -MP -MF $(DEPDIR)/SizeMetric.Tpo -c -o SizeMetric.lo `test -f '$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/SizeMetric.Tpo $(DEPDIR)/SizeMetric.Plo
#	$(AM_V_CXX)source='$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp' object='SizeMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SizeMetric.lo `test -f '$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp' || echo '$(srcdir)/'`$(SRC_QUALITYMETRIC_VOLUME_DIR)/SizeMetric.cpp

CachingTargetCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CachingTargetCalculator.lo -MD -MP -MF $(DEPDIR)/CachingTargetCalculator.Tpo -c -o CachingTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CachingTargetCalculator.Tpo $(DEPDIR)/CachingTargetCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp' object='CachingTargetCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CachingTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/CachingTargetCalculator.cpp

IdealShapeTarget.lo: $(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IdealShapeTarget.lo -MD -MP -MF $(DEPDIR)/IdealShapeTarget.Tpo -c -o IdealShapeTarget.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/IdealShapeTarget.Tpo $(DEPDIR)/IdealShapeTarget.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp' object='IdealShapeTarget.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IdealShapeTarget.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/IdealShapeTarget.cpp

InverseMetricWeight.lo: $(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InverseMetricWeight.lo -MD -MP -MF $(DEPDIR)/InverseMetricWeight.Tpo -c -o InverseMetricWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InverseMetricWeight.Tpo $(DEPDIR)/InverseMetricWeight.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp' object='InverseMetricWeight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InverseMetricWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/InverseMetricWeight.cpp

JacobianCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT JacobianCalculator.lo -MD -MP -MF $(DEPDIR)/JacobianCalculator.Tpo -c -o JacobianCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/JacobianCalculator.Tpo $(DEPDIR)/JacobianCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp' object='JacobianCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JacobianCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/JacobianCalculator.cpp

LambdaTarget.lo: $(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LambdaTarget.lo -MD -MP -MF $(DEPDIR)/LambdaTarget.Tpo -c -o LambdaTarget.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LambdaTarget.Tpo $(DEPDIR)/LambdaTarget.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp' object='LambdaTarget.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LambdaTarget.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/LambdaTarget.cpp

LambdaConstant.lo: $(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LambdaConstant.lo -MD -MP -MF $(DEPDIR)/LambdaConstant.Tpo -c -o LambdaConstant.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LambdaConstant.Tpo $(DEPDIR)/LambdaConstant.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp' object='LambdaConstant.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LambdaConstant.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/LambdaConstant.cpp

LVQDTargetCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LVQDTargetCalculator.lo -MD -MP -MF $(DEPDIR)/LVQDTargetCalculator.Tpo -c -o LVQDTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/LVQDTargetCalculator.Tpo $(DEPDIR)/LVQDTargetCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp' object='LVQDTargetCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LVQDTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/LVQDTargetCalculator.cpp

MetricWeight.lo: $(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MetricWeight.lo -MD -MP -MF $(DEPDIR)/MetricWeight.Tpo -c -o MetricWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MetricWeight.Tpo $(DEPDIR)/MetricWeight.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp' object='MetricWeight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MetricWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/MetricWeight.cpp

RefMeshTargetCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RefMeshTargetCalculator.lo -MD -MP -MF $(DEPDIR)/RefMeshTargetCalculator.Tpo -c -o RefMeshTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RefMeshTargetCalculator.Tpo $(DEPDIR)/RefMeshTargetCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp' object='RefMeshTargetCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RefMeshTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/RefMeshTargetCalculator.cpp

ReferenceMesh.lo: $(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ReferenceMesh.lo -MD -MP -MF $(DEPDIR)/ReferenceMesh.Tpo -c -o ReferenceMesh.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ReferenceMesh.Tpo $(DEPDIR)/ReferenceMesh.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp' object='ReferenceMesh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ReferenceMesh.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/ReferenceMesh.cpp

RefSizeTargetCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RefSizeTargetCalculator.lo -MD -MP -MF $(DEPDIR)/RefSizeTargetCalculator.Tpo -c -o RefSizeTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RefSizeTargetCalculator.Tpo $(DEPDIR)/RefSizeTargetCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp' object='RefSizeTargetCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RefSizeTargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/RefSizeTargetCalculator.cpp

RemainingWeight.lo: $(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemainingWeight.lo -MD -MP -MF $(DEPDIR)/RemainingWeight.Tpo -c -o RemainingWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/RemainingWeight.Tpo $(DEPDIR)/RemainingWeight.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp' object='RemainingWeight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemainingWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/RemainingWeight.cpp

TargetCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TargetCalculator.lo -MD -MP -MF $(DEPDIR)/TargetCalculator.Tpo -c -o TargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TargetCalculator.Tpo $(DEPDIR)/TargetCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp' object='TargetCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TargetCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TargetCalculator.cpp

TargetReader.lo: $(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TargetReader.lo -MD -MP -MF $(DEPDIR)/TargetReader.Tpo -c -o TargetReader.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TargetReader.Tpo $(DEPDIR)/TargetReader.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp' object='TargetReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TargetReader.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TargetReader.cpp

TargetWriter.lo: $(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TargetWriter.lo -MD -MP -MF $(DEPDIR)/TargetWriter.Tpo -c -o TargetWriter.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TargetWriter.Tpo $(DEPDIR)/TargetWriter.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp' object='TargetWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TargetWriter.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TargetWriter.cpp

TetDihedralWeight.lo: $(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TetDihedralWeight.lo -MD -MP -MF $(DEPDIR)/TetDihedralWeight.Tpo -c -o TetDihedralWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TetDihedralWeight.Tpo $(DEPDIR)/TetDihedralWeight.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp' object='TetDihedralWeight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TetDihedralWeight.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/TetDihedralWeight.cpp

WeightCalculator.lo: $(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WeightCalculator.lo -MD -MP -MF $(DEPDIR)/WeightCalculator.Tpo -c -o WeightCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/WeightCalculator.Tpo $(DEPDIR)/WeightCalculator.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp' object='WeightCalculator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WeightCalculator.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/WeightCalculator.cpp

WeightReader.lo: $(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WeightReader.lo -MD -MP -MF $(DEPDIR)/WeightReader.Tpo -c -o WeightReader.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/WeightReader.Tpo $(DEPDIR)/WeightReader.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp' object='WeightReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WeightReader.lo `test -f '$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp' || echo '$(srcdir)/'`$(SRC_TARGETCALCULATOR_DIR)/WeightReader.cpp

AWMetric.lo: $(SRC_TARGETMETRIC_DIR)/AWMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWMetric.lo -MD -MP -MF $(DEPDIR)/AWMetric.Tpo -c -o AWMetric.lo `test -f '$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWMetric.Tpo $(DEPDIR)/AWMetric.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp' object='AWMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWMetric.lo `test -f '$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/AWMetric.cpp

TMetric.lo: $(SRC_TARGETMETRIC_DIR)/TMetric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TMetric.lo -MD -MP -MF $(DEPDIR)/TMetric.Tpo -c -o TMetric.lo `test -f '$(SRC_TARGETMETRIC_DIR)/TMetric.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/TMetric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TMetric.Tpo $(DEPDIR)/TMetric.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_DIR)/TMetric.cpp' object='TMetric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TMetric.lo `test -f '$(SRC_TARGETMETRIC_DIR)/TMetric.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/TMetric.cpp

TMetricBarrier.lo: $(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TMetricBarrier.lo -MD -MP -MF $(DEPDIR)/TMetricBarrier.Tpo -c -o TMetricBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TMetricBarrier.Tpo $(DEPDIR)/TMetricBarrier.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp' object='TMetricBarrier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TMetricBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/TMetricBarrier.cpp

TMetricNonBarrier.lo: $(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TMetricNonBarrier.lo -MD -MP -MF $(DEPDIR)/TMetricNonBarrier.Tpo -c -o TMetricNonBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TMetricNonBarrier.Tpo $(DEPDIR)/TMetricNonBarrier.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp' object='TMetricNonBarrier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TMetricNonBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/TMetricNonBarrier.cpp

AWMetricBarrier.lo: $(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWMetricBarrier.lo -MD -MP -MF $(DEPDIR)/AWMetricBarrier.Tpo -c -o AWMetricBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWMetricBarrier.Tpo $(DEPDIR)/AWMetricBarrier.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp' object='AWMetricBarrier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWMetricBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/AWMetricBarrier.cpp

AWMetricNonBarrier.lo: $(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWMetricNonBarrier.lo -MD -MP -MF $(DEPDIR)/AWMetricNonBarrier.Tpo -c -o AWMetricNonBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWMetricNonBarrier.Tpo $(DEPDIR)/AWMetricNonBarrier.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp' object='AWMetricNonBarrier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWMetricNonBarrier.lo `test -f '$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_DIR)/AWMetricNonBarrier.cpp

InvTransBarrier.lo: $(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InvTransBarrier.lo -MD -MP -MF $(DEPDIR)/InvTransBarrier.Tpo -c -o InvTransBarrier.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InvTransBarrier.Tpo $(DEPDIR)/InvTransBarrier.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp' object='InvTransBarrier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InvTransBarrier.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/InvTransBarrier.cpp

TOffset.lo: $(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TOffset.lo -MD -MP -MF $(DEPDIR)/TOffset.Tpo -c -o TOffset.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TOffset.Tpo $(DEPDIR)/TOffset.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp' object='TOffset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TOffset.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TOffset.cpp

TMixed.lo: $(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TMixed.lo -MD -MP -MF $(DEPDIR)/TMixed.Tpo -c -o TMixed.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TMixed.Tpo $(DEPDIR)/TMixed.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp' object='TMixed.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TMixed.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TMixed.cpp

TPower2.lo: $(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TPower2.lo -MD -MP -MF $(DEPDIR)/TPower2.Tpo -c -o TPower2.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TPower2.Tpo $(DEPDIR)/TPower2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp' object='TPower2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TPower2.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TPower2.cpp

TScale.lo: $(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TScale.lo -MD -MP -MF $(DEPDIR)/TScale.Tpo -c -o TScale.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TScale.Tpo $(DEPDIR)/TScale.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp' object='TScale.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TScale.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TScale.cpp

TSquared.lo: $(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSquared.lo -MD -MP -MF $(DEPDIR)/TSquared.Tpo -c -o TSquared.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TSquared.Tpo $(DEPDIR)/TSquared.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp' object='TSquared.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSquared.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TSquared.cpp

TSum.lo: $(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSum.lo -MD -MP -MF $(DEPDIR)/TSum.Tpo -c -o TSum.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TSum.Tpo $(DEPDIR)/TSum.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp' object='TSum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSum.lo `test -f '$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_MISC_DIR)/TSum.cpp

AWShape2DB1.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWShape2DB1.lo -MD -MP -MF $(DEPDIR)/AWShape2DB1.Tpo -c -o AWShape2DB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWShape2DB1.Tpo $(DEPDIR)/AWShape2DB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp' object='AWShape2DB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWShape2DB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DB1.cpp

AWShape2DNB1.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWShape2DNB1.lo -MD -MP -MF $(DEPDIR)/AWShape2DNB1.Tpo -c -o AWShape2DNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWShape2DNB1.Tpo $(DEPDIR)/AWShape2DNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp' object='AWShape2DNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWShape2DNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB1.cpp

AWShape2DNB2.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWShape2DNB2.lo -MD -MP -MF $(DEPDIR)/AWShape2DNB2.Tpo -c -o AWShape2DNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWShape2DNB2.Tpo $(DEPDIR)/AWShape2DNB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp' object='AWShape2DNB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWShape2DNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/AWShape2DNB2.cpp

TInverseMeanRatio.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TInverseMeanRatio.lo -MD -MP -MF $(DEPDIR)/TInverseMeanRatio.Tpo -c -o TInverseMeanRatio.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TInverseMeanRatio.Tpo $(DEPDIR)/TInverseMeanRatio.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp' object='TInverseMeanRatio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TInverseMeanRatio.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TInverseMeanRatio.cpp

TShape2DNB2.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShape2DNB2.lo -MD -MP -MF $(DEPDIR)/TShape2DNB2.Tpo -c -o TShape2DNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShape2DNB2.Tpo $(DEPDIR)/TShape2DNB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp' object='TShape2DNB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShape2DNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape2DNB2.cpp

TShape3DB2.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShape3DB2.lo -MD -MP -MF $(DEPDIR)/TShape3DB2.Tpo -c -o TShape3DB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShape3DB2.Tpo $(DEPDIR)/TShape3DB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp' object='TShape3DB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShape3DB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShape3DB2.cpp

TShapeB1.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeB1.lo -MD -MP -MF $(DEPDIR)/TShapeB1.Tpo -c -o TShapeB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeB1.Tpo $(DEPDIR)/TShapeB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp' object='TShapeB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeB1.cpp

TShapeNB1.lo: $(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeNB1.lo -MD -MP -MF $(DEPDIR)/TShapeNB1.Tpo -c -o TShapeNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeNB1.Tpo $(DEPDIR)/TShapeNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp' object='TShapeNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_DIR)/TShapeNB1.cpp

AWShapeOrientNB1.lo: $(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWShapeOrientNB1.lo -MD -MP -MF $(DEPDIR)/AWShapeOrientNB1.Tpo -c -o AWShapeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWShapeOrientNB1.Tpo $(DEPDIR)/AWShapeOrientNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp' object='AWShapeOrientNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWShapeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/AWShapeOrientNB1.cpp

TShapeOrientB1.lo: $(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeOrientB1.lo -MD -MP -MF $(DEPDIR)/TShapeOrientB1.Tpo -c -o TShapeOrientB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeOrientB1.Tpo $(DEPDIR)/TShapeOrientB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp' object='TShapeOrientB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeOrientB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB1.cpp

TShapeOrientB2.lo: $(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeOrientB2.lo -MD -MP -MF $(DEPDIR)/TShapeOrientB2.Tpo -c -o TShapeOrientB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeOrientB2.Tpo $(DEPDIR)/TShapeOrientB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp' object='TShapeOrientB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeOrientB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientB2.cpp

TShapeOrientNB1.lo: $(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeOrientNB1.lo -MD -MP -MF $(DEPDIR)/TShapeOrientNB1.Tpo -c -o TShapeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeOrientNB1.Tpo $(DEPDIR)/TShapeOrientNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp' object='TShapeOrientNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB1.cpp

TShapeOrientNB2.lo: $(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeOrientNB2.lo -MD -MP -MF $(DEPDIR)/TShapeOrientNB2.Tpo -c -o TShapeOrientNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeOrientNB2.Tpo $(DEPDIR)/TShapeOrientNB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp' object='TShapeOrientNB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeOrientNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPE_ORIENT_DIR)/TShapeOrientNB2.cpp

AWShapeSizeB1.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWShapeSizeB1.lo -MD -MP -MF $(DEPDIR)/AWShapeSizeB1.Tpo -c -o AWShapeSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWShapeSizeB1.Tpo $(DEPDIR)/AWShapeSizeB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp' object='AWShapeSizeB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWShapeSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/AWShapeSizeB1.cpp

TShapeSize2DB2.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSize2DB2.lo -MD -MP -MF $(DEPDIR)/TShapeSize2DB2.Tpo -c -o TShapeSize2DB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSize2DB2.Tpo $(DEPDIR)/TShapeSize2DB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp' object='TShapeSize2DB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSize2DB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DB2.cpp

TShapeSize2DNB1.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSize2DNB1.lo -MD -MP -MF $(DEPDIR)/TShapeSize2DNB1.Tpo -c -o TShapeSize2DNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSize2DNB1.Tpo $(DEPDIR)/TShapeSize2DNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp' object='TShapeSize2DNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSize2DNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB1.cpp

TShapeSize2DNB2.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSize2DNB2.lo -MD -MP -MF $(DEPDIR)/TShapeSize2DNB2.Tpo -c -o TShapeSize2DNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSize2DNB2.Tpo $(DEPDIR)/TShapeSize2DNB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp' object='TShapeSize2DNB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSize2DNB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize2DNB2.cpp

TShapeSize3DB2.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSize3DB2.lo -MD -MP -MF $(DEPDIR)/TShapeSize3DB2.Tpo -c -o TShapeSize3DB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSize3DB2.Tpo $(DEPDIR)/TShapeSize3DB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp' object='TShapeSize3DB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSize3DB2.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB2.cpp

TShapeSize3DB4.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSize3DB4.lo -MD -MP -MF $(DEPDIR)/TShapeSize3DB4.Tpo -c -o TShapeSize3DB4.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSize3DB4.Tpo $(DEPDIR)/TShapeSize3DB4.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp' object='TShapeSize3DB4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSize3DB4.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DB4.cpp

TShapeSize3DNB1.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSize3DNB1.lo -MD -MP -MF $(DEPDIR)/TShapeSize3DNB1.Tpo -c -o TShapeSize3DNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSize3DNB1.Tpo $(DEPDIR)/TShapeSize3DNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp' object='TShapeSize3DNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSize3DNB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSize3DNB1.cpp

TShapeSizeB1.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSizeB1.lo -MD -MP -MF $(DEPDIR)/TShapeSizeB1.Tpo -c -o TShapeSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSizeB1.Tpo $(DEPDIR)/TShapeSizeB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp' object='TShapeSizeB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB1.cpp

TShapeSizeB3.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSizeB3.lo -MD -MP -MF $(DEPDIR)/TShapeSizeB3.Tpo -c -o TShapeSizeB3.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSizeB3.Tpo $(DEPDIR)/TShapeSizeB3.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp' object='TShapeSizeB3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSizeB3.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeB3.cpp

TShapeSizeNB3.lo: $(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSizeNB3.lo -MD -MP -MF $(DEPDIR)/TShapeSizeNB3.Tpo -c -o TShapeSizeNB3.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSizeNB3.Tpo $(DEPDIR)/TShapeSizeNB3.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp' object='TShapeSizeNB3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSizeNB3.lo `test -f '$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SHAPESIZE_DIR)/TShapeSizeNB3.cpp

AWShapeSizeOrientNB1.lo: $(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWShapeSizeOrientNB1.lo -MD -MP -MF $(DEPDIR)/AWShapeSizeOrientNB1.Tpo -c -o AWShapeSizeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWShapeSizeOrientNB1.Tpo $(DEPDIR)/AWShapeSizeOrientNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp' object='AWShapeSizeOrientNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWShapeSizeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/AWShapeSizeOrientNB1.cpp

TShapeSizeOrientB1.lo: $(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSizeOrientB1.lo -MD -MP -MF $(DEPDIR)/TShapeSizeOrientB1.Tpo -c -o TShapeSizeOrientB1.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSizeOrientB1.Tpo $(DEPDIR)/TShapeSizeOrientB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp' object='TShapeSizeOrientB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSizeOrientB1.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB1.cpp

TShapeSizeOrientB2.lo: $(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSizeOrientB2.lo -MD -MP -MF $(DEPDIR)/TShapeSizeOrientB2.Tpo -c -o TShapeSizeOrientB2.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSizeOrientB2.Tpo $(DEPDIR)/TShapeSizeOrientB2.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp' object='TShapeSizeOrientB2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSizeOrientB2.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientB2.cpp

TShapeSizeOrientNB1.lo: $(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TShapeSizeOrientNB1.lo -MD -MP -MF $(DEPDIR)/TShapeSizeOrientNB1.Tpo -c -o TShapeSizeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TShapeSizeOrientNB1.Tpo $(DEPDIR)/TShapeSizeOrientNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp' object='TShapeSizeOrientNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TShapeSizeOrientNB1.lo `test -f '$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SSO_DIR)/TShapeSizeOrientNB1.cpp

AWSizeB1.lo: $(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWSizeB1.lo -MD -MP -MF $(DEPDIR)/AWSizeB1.Tpo -c -o AWSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWSizeB1.Tpo $(DEPDIR)/AWSizeB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp' object='AWSizeB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeB1.cpp

AWSizeNB1.lo: $(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWSizeNB1.lo -MD -MP -MF $(DEPDIR)/AWSizeNB1.Tpo -c -o AWSizeNB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWSizeNB1.Tpo $(DEPDIR)/AWSizeNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp' object='AWSizeNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWSizeNB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/AWSizeNB1.cpp

TSizeB1.lo: $(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSizeB1.lo -MD -MP -MF $(DEPDIR)/TSizeB1.Tpo -c -o TSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TSizeB1.Tpo $(DEPDIR)/TSizeB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp' object='TSizeB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSizeB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeB1.cpp

TSizeNB1.lo: $(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSizeNB1.lo -MD -MP -MF $(DEPDIR)/TSizeNB1.Tpo -c -o TSizeNB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TSizeNB1.Tpo $(DEPDIR)/TSizeNB1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp' object='TSizeNB1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSizeNB1.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/TSizeNB1.cpp

TTau.lo: $(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TTau.lo -MD -MP -MF $(DEPDIR)/TTau.Tpo -c -o TTau.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TTau.Tpo $(DEPDIR)/TTau.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp' object='TTau.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TTau.lo `test -f '$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_SIZE_DIR)/TTau.cpp

AWUntangleBeta.lo: $(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AWUntangleBeta.lo -MD -MP -MF $(DEPDIR)/AWUntangleBeta.Tpo -c -o AWUntangleBeta.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AWUntangleBeta.Tpo $(DEPDIR)/AWUntangleBeta.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp' object='AWUntangleBeta.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AWUntangleBeta.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/AWUntangleBeta.cpp

TUntangle1.lo: $(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TUntangle1.lo -MD -MP -MF $(DEPDIR)/TUntangle1.Tpo -c -o TUntangle1.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TUntangle1.Tpo $(DEPDIR)/TUntangle1.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp' object='TUntangle1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TUntangle1.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangle1.cpp

TUntangleBeta.lo: $(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TUntangleBeta.lo -MD -MP -MF $(DEPDIR)/TUntangleBeta.Tpo -c -o TUntangleBeta.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TUntangleBeta.Tpo $(DEPDIR)/TUntangleBeta.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp' object='TUntangleBeta.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TUntangleBeta.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleBeta.cpp

TUntangleMu.lo: $(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TUntangleMu.lo -MD -MP -MF $(DEPDIR)/TUntangleMu.Tpo -c -o TUntangleMu.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TUntangleMu.Tpo $(DEPDIR)/TUntangleMu.Plo
#	$(AM_V_CXX)source='$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp' object='TUntangleMu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TUntangleMu.lo `test -f '$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp' || echo '$(srcdir)/'`$(SRC_TARGETMETRIC_UNTANGLE_DIR)/TUntangleMu.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libmesquite_la_includeHEADERS: $(libmesquite_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libmesquite_la_include_HEADERS)'; test -n "$(libmesquite_la_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmesquite_la_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmesquite_la_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmesquite_la_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmesquite_la_includedir)" || exit $$?; \
	done

uninstall-libmesquite_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmesquite_la_include_HEADERS)'; test -n "$(libmesquite_la_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmesquite_la_includedir)'; $(am__uninstall_files_from_dir)
install-nodist_libmesquite_la_includeHEADERS: $(nodist_libmesquite_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_libmesquite_la_include_HEADERS)'; test -n "$(libmesquite_la_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmesquite_la_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmesquite_la_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmesquite_la_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmesquite_la_includedir)" || exit $$?; \
	done

uninstall-nodist_libmesquite_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_libmesquite_la_include_HEADERS)'; test -n "$(libmesquite_la_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmesquite_la_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmesquite_la_includedir)" "$(DESTDIR)$(libmesquite_la_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmesquite_la_includeHEADERS \
	install-nodist_libmesquite_la_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libmesquite_la_includeHEADERS \
	uninstall-nodist_libmesquite_la_includeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES \
	install-libmesquite_la_includeHEADERS install-man \
	install-nodist_libmesquite_la_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libmesquite_la_includeHEADERS \
	uninstall-nodist_libmesquite_la_includeHEADERS

.PRECIOUS: Makefile


include/Mesquite_all_headers.hpp: $(MSQ_HDRS)
	@echo "Generating $@..."
	@echo '/* NOTE: This file is generated by make.' > $@
	@echo ' *       Do not manually edit it.'       >> $@
	@echo ' */'                                     >> $@
	@echo '#ifndef MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#define MESQUITE_ALL_HEADERS_HPP'        >> $@
	@echo '#include "Mesquite.hpp"'                 >> $@
	@echo '#include "MeshInterface.hpp"'            >> $@ 
	@echo '#include "ParallelMeshInterface.hpp"'    >> $@
	@echo '#include "ParallelHelperInterface.hpp"'  >> $@ 
	@echo '#include "CurveDomain.hpp"'  >> $@ 
	@for file in $(MSQ_HDRS); do \
	   n=`expr X"$$file" : X".*/\([^/]*\)"`;\
	   test -z "$$n" || echo "#include \"$$n\"" >> $@; \
	done
	@echo '#endif'                                  >> $@ 

# Generate list of include flags src/ dir and subdirs 
# for use when compiling stuff outside of the src/ subdir.
# Basically, replace value of $(top_srcdir) with the
# $(top_srcdir) variable in the existing list of include flags.
$(RECURSIVE_TARGETS) distdir: cppflags.make
cppflags.make: $(MSQ_HDRS) Makefile.am ../config.status
	@echo "Generating $@..."
	@echo "#MSQ_INCLUDES = $(MSQ_INCLUDES)" > $@
	@echo "INCLUDES = -I\$$(top_srcdir)/src/include \\" >> $@
	@for flag in $(MSQ_INCLUDES); do \
	  n=`expr X"$$flag" : X"-I$(top_srcdir)/\(.*\)" || true`; \
	  if test "x$$n" != "x"; then \
	    echo "	-I\$$(top_srcdir)/$$n \\"     >> $@ ; \
	  fi ; \
	done
	@echo "	-I\$$(top_builddir)/src/include \\"       >> $@ 
	@echo "	-I\$$(top_builddir)/testSuite \\"         >> $@
	@echo "	-I\$$(top_srcdir)/itaps \\"               >> $@ 
	@echo "	-I\$$(top_builddir)/itaps \\"             >> $@
	@echo "	\$$(IBASE_INCL)"                          >> $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
